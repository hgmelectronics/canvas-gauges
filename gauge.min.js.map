{"version":3,"sources":["gauge.min.js"],"names":["ns","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","vendorize","prop","window","global","vendors","s","capitalized","charAt","toUpperCase","substr","vendorProp","step","time","draw","start","rule","duration","end","anim","progress","percent","animationTransformed","isFinite","isNaN","frame","requestAnimationFrame","inProgress","Collection","apply","this","arguments","verifyError","err","DOMException","result","formatContext","options","format","replace","validMember","match","member","tickSelectAutoLog","approxCount","majorTicksApproxCount","round","majorTicksRound","base","majorTicksBase","values","majorTicksNumbers","minorRatio","majorTicksMinorRatio","approxDelta","maxValue","minValue","magnitude","Math","pow","floor","log","approxMantissa","mantissa","sqrt","delta","ticks","tick","ceil","push","unshift","majorTicks","minorTicks","prepareTicks","exactTicks","tickSelectors","drawings","formatMajorTickNumber","tickSide","roundRect","context","x","y","w","h","r","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","padValue","val","dec","valueDec","int","valueInt","strVal","n","parseFloat","abs","toFixed","toString","split","num","right","hasDec","majorTicksDec","majorTicksInt","indexOf","join","radians","degrees","PI","radialPoint","radius","angle","sin","cos","linearGradient","colorFrom","colorTo","isVertical","undefined","grad","createLinearGradient","addColorStop","drawShadow","restore","save","borderShadowWidth","shadowBlur","shadowColor","colorBorderShadow","drawNeedleShadow","needleShadow","shadowOffsetX","shadowOffsetY","colorNeedleShadowDown","font","target","baseSize","reset","strokeStyle","lineWidth","drawValueTextShadow","offset","blur","valueTextShadow","colorValueTextShadow","drawValueBox","max","valueBox","addLength","maxValueWidth","repeat","String","parseInt","concat","map","text","valueText","tunit","runit","tw","measureText","Number","width","th","fontValueSize","sw","valueBoxStroke","bmax","bw","bh","br","valueBoxBorderRadius","obw","valueBoxWidth","bx","by","gy","rect","grd","createRadialGradient","colorValueBoxRect","colorValueBoxRectEnd","stroke","colorValueBoxShadow","colorValueBoxBackground","fillStyle","fill","colorValueText","textAlign","textBaseline","fillText","normalizedValue","min","dt","needleClampFrac","indMin","needleClampSnap","indMax","normal","indented","drawRadialBorder","arc","maxRadialRadius","pxRatio","SmartCanvas","pixelRatio","maxRadius","borderOuterWidth","borderMiddleWidth","borderInnerWidth","drawRadialPlate","d0","r0","r1","r2","r3","shadowDrawn","colorBorderOuter","colorBorderOuterEnd","colorBorderMiddle","colorBorderMiddleEnd","colorBorderInner","colorBorderInnerEnd","colorPlateEnd","colorPlate","drawRadialHighlights","hlWidth","highlightsWidth","radialTicksRadius","highlights","vd","ticksAngle","hlt","rotate","HPI","startAngle","to","color","lineCap","highlightsLineCap","drawRadialMinorTicks","range","minTicks","ratio","colorMinorTicks","colorStrokeTicks","BaseGauge","mod","closeStrokedPath","unit","barWidth","barStrokeWidth","drawRadialMajorTicks","colors","colorMajorTicks","radialNextAngle","strokeTicks","drawRadialNumbers","points","isAnimated","animationTarget","colorNumbers","plateValueAngle","textWidth","textHeight","fontNumbersSize","textRadius","point","numbersMargin","drawRadialTitle","title","colorTitle","drawRadialUnits","units","colorUnits","drawRadialNeedle","needle","isFixed","barStartPosition","needleCircleSize","rIn","needleEnd","rStart","needleStart","pad1","needleWidth","pad2","colorNeedle","colorNeedleEnd","needleType","colorNeedleShadowUp","needleCircleOuter","colorNeedleCircleOuter","colorNeedleCircleOuterEnd","needleCircleInner","colorNeedleCircleInner","colorNeedleCircleInnerEnd","drawRadialValueBox","computeAngles","sa","ea","clampProgressNeedle","endAngle","midValue","drawRadialProgressBar","rMax","rMin","half","colorBarStroke","colorBar","barShadow","clip","colorBarShadow","barProgress","angles","colorBarProgress","displayValue","gauge","animatedValue","drawRectangle","colorStart","colorEnd","drawLinearBorder","drawLinearPlate","borderRadius","w1","w2","w3","w4","h1","h2","h3","h4","x2","x3","x4","y2","y3","y4","aliasingOffset","barDimensions","hasTitle","hasUnits","hasValue","titleMargin","unitsMargin","valueMargin","strokeWidth","barBeginCircle","barLength","barMargin","x0","y0","dx","hasLeft","hasRight","ticksWidth","dy","barOffset","ticksLength","X","Y","baseX","baseY","ticksPadding","drawLinearBarShape","type","_barDimensions","fullBarLength","direction","alpha","asin","cosAlpha","sinAlpha","x1","y1","cutRadius","rx","ry","colorBarEnd","colorBarProgressEnd","drawLinearBar","hasTicksBar","notWhich","needleSide","numberSide","drawLinearBarProgress","drawLinearBarHighlights","_context$barDimension","tickOffset","interval","eX","eH","eY","hLeft","hRight","entry","eStart","eW","drawLinearTick","drawLinearTicks","minVal","maxVal","lineLength","_context$barDimension2","tickX","tickY","tickLen","tickLeft","tickRight","drawLinearMajorTicks","_drawings$prepareTick","_drawings$prepareTick2","_slicedToArray","valuePerNonExactTick","_context$barDimension3","rightTicks","leftTicks","sX","sY","drawLinearTickStroke","drawLinearMinorTicks","_drawings$prepareTick3","_drawings$prepareTick4","ticksWidthMinor","drawLinearMajorTicksNumbers","_context$barDimension4","tickValues","numLeft","numRight","textX","textY","numberOffset","textMargin","drawLinearTitle","_context$barDimension5","fontTitleSize","drawLinearUnits","_context$barDimension6","fontUnitsSize","drawLinearBarNeedle","_context$barDimension7","position","tickWidth","baseLength","needleLength","toLowerCase","drawLinearArrowNeedle","drawLinearLineNeedle","barStart","nLeft","nRight","needleStyle","isRight","peakLength","bodyLength","halfWidth","drawLinearValueBox","boxWidth","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_set","set","setter","_createClass","defineProperties","props","descriptor","defineProperty","key","protoProps","staticProps","assign","firstSource","nextSource","keysArray","keys","nextIndex","len","nextKey","searchElement","fromIndex","k","O","Infinity","_value","relativeStart","relativeEnd","final","EventEmitter","_events","addListener","on","removeListener","off","event","_len","args","_key","_len2","handlers","_key2","handler","wrapper","_handler","index","splice","callback","setTimeout","Date","getTime","rules","linear","p","quad","dequad","quint","dequint","cycle","acos","decycle","bounce","debounce","a","b","elastic","delastic","Animation","_this","cancel","performance","now","id","DomObserver","element","toDashed","Type","mutationsObserved","isObservable","MutationObserver","GAUGES_NO_AUTO_INIT","domReady","traverse","bind","node","tagName","getAttribute","elements","document","getElementsByTagName","process","observe","body","childList","subtree","attributes","characterData","attributeOldValue","characterDataOldValue","records","record","attributeName","isValidNode","oldValue","addedNodes","ii","ss","_this2","JSON","parse","stringify","hasOwnProperty","toAttributeName","attributeValue","renderTo","observer","forEach","attr","disconnect","destroy","_prop","part","_options","update","test","e","camelCase","str","dashed","readyState","addEventListener","attachEvent","canvas","height","collection","init","style","elementClone","cloneNode","getContext","contextClone","drawWidth","drawHeight","drawX","drawY","minSide","initialized","translate","clearRect","onRedraw","scale","redraw","devicePixelRatio","matchMedia","GenericOptions","animateOnInit","borders","listeners","animation","animationDuration","animationRule","fontNumbers","fontTitle","fontUnits","fontValue","fontNumbersStyle","fontTitleStyle","fontUnitsStyle","fontValueStyle","fontNumbersWeight","fontTitleWeight","fontUnitsWeight","fontValueWeight","getElementById","version","gauges","_EventEmitter","_this3","className","name","HTMLCanvasElement","parentNode","offsetWidth","offsetHeight","configure","emit","_this4","ensureValue","fromValue","animate","newValue","toCamelCase","m","autoLog","defaultRadialGaugeOptions","useMinPath","RadialGauge","_BaseGauge","_ref","commit","drawImage","_context","initialize","defaultLinearGaugeOptions","LinearGauge","_BaseGauge2","_ref2","drawBox","module","exports"],"mappings":"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","file":"gauge.min.js","sourcesContent":["/*!\n * The MIT License (MIT)\n * \n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @version 2.1.9\n */\n(function(ns) {'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if (\"value\" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * @external {Object.assign} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n */\n/* istanbul ignore next */\nif (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function value(target, firstSource) {\n            'use strict';\n\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert first argument to object');\n            }\n\n            var to = Object(target);\n            var i = 1;\n\n            for (; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n\n                var keysArray = Object.keys(Object(nextSource));\n                var nextIndex = 0,\n                    len = keysArray.length;\n\n                for (; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n\n            return to;\n        }\n    });\n}\n\n/**\r\n * @external {Array.indexOf} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\r\n */\n/* istanbul ignore next */\nif (!Array.prototype.indexOf) {\n    Object.defineProperty(Array.prototype, \"indexOf\", {\n        value: function value(searchElement, fromIndex) {\n            var k;\n\n            if (this === null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            var O = Object(this);\n            var len = O.length >>> 0;\n\n            if (len === 0) {\n                return -1;\n            }\n\n            var n = +fromIndex || 0;\n\n            if (Math.abs(n) === Infinity) {\n                n = 0;\n            }\n\n            if (n >= len) {\n                return -1;\n            }\n\n            k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n            while (k < len) {\n                if (k in O && O[k] === searchElement) {\n                    return k;\n                }\n\n                k++;\n            }\n\n            return -1;\n        }\n    });\n}\n\n/**\r\n * @external {Array.fill} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\r\n */\n/* istanbul ignore next */\nif (!Array.prototype.fill) {\n    Object.defineProperty(Array.prototype, \"fill\", {\n        value: function value(_value) {\n            if (this === null) {\n                throw new TypeError('this is null or not defined');\n            }\n\n            var O = Object(this);\n            var len = O.length >>> 0;\n            var start = arguments[1];\n            var relativeStart = start >> 0;\n            var k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len);\n            var end = arguments[2];\n            var relativeEnd = end === undefined ? len : end >> 0;\n            var final = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len);\n            while (k < final) {\n                O[k] = _value;\n                k++;\n            }\n\n            return O;\n        }\n    });\n}\n\n/**\r\n * mocking window\r\n */\nif (typeof window === 'undefined') {\n    window = typeof global === 'undefined' ? {} : global;\n}\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n/**\r\n * Look-ups for a proper vendor-specific property and returns its value\r\n *\r\n * @example\r\n * var requestAnimationFrame = vendorize('requestAnimationFrame');\r\n * // it will refer properly to:\r\n * //  - window.requestAnimationFrame by default or to\r\n * //  - window.webkitRequestAnimationFrame or to\r\n * //  - window.mozRequestAnimationFrame or to\r\n * //  - window.msRequestAnimationFrame or to\r\n * //  - window.oRequestAnimationFrame\r\n * // depending on the current browser vendor\r\n *\r\n * @author Mykhailo Stadnyk <mikhus@gmail.com>\r\n * @param {string} prop\r\n * @param {HTMLElement|Window|object} [from] - default is window\r\n * @returns {*}\r\n */\nfunction vendorize(prop, from) {\n    /* istanbul ignore else: no reason to cover */\n    if (!from) {\n        from = typeof window === 'undefined' ? global : window;\n    }\n\n    if (typeof from[prop] !== 'undefined') {\n        return from[prop];\n    }\n\n    var vendors = ['webkit', 'moz', 'ms', 'o'];\n    var i = 0;\n    var s = vendors.length;\n    var capitalized = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (; i < s; i++) {\n        var vendorProp = from[vendors[i] + capitalized];\n\n        /* istanbul ignore if: requires very complex environment to test (specific browser version) */\n        if (typeof vendorProp !== 'undefined') {\n            return vendorProp;\n        }\n    }\n\n    return null;\n}\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\n/**\r\n * Class EventEmitter - base event manager\r\n */\n\nvar EventEmitter = function () {\n    /**\r\n     * @constructor\r\n     */\n    function EventEmitter() {\n        _classCallCheck(this, EventEmitter);\n\n        this._events = {};\n\n        this.addListener = this.on;\n        this.removeListener = this.off;\n    }\n\n    /**\r\n     * Returns all event listeners\r\n     *\r\n     * @return {object}\r\n     */\n\n\n    _createClass(EventEmitter, [{\n        key: 'emit',\n\n\n        /**\r\n         * Emits given event bypassing to each registered handler given args\r\n         *\r\n         * @param {string} event\r\n         * @param {...*} args\r\n         */\n        value: function emit(event) {\n            if (this._events[event]) {\n                var i = 0;\n                var s = this._events[event].length;\n\n                for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                    args[_key - 1] = arguments[_key];\n                }\n\n                for (; i < s; i++) {\n                    this._events[event][i] && this._events[event][i].apply(this, args);\n                }\n            }\n        }\n\n        /**\r\n         * Registers given handler for given event to be called only once when\r\n         * event is emitted\r\n         *\r\n         * @param {string} event\r\n         * @param {...function} handlers\r\n         */\n\n    }, {\n        key: 'once',\n        value: function once(event) {\n            for (var _len2 = arguments.length, handlers = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                handlers[_key2 - 1] = arguments[_key2];\n            }\n\n            var i = 0;\n            var s = handlers.length;\n            var self = this;\n\n            var _loop = function _loop() {\n                var handler = handlers[i];\n                var wrapper = function wrapper() {\n                    self.off(event, wrapper);\n                    handler.apply(self, arguments);\n                };\n\n                handlers[i] = wrapper;\n            };\n\n            for (; i < s; i++) {\n                _loop();\n            }\n\n            this.on.apply(this, [event].concat(handlers));\n        }\n\n        /**\r\n         * Registers given handlers for a given events to be called each time event\r\n         * is emitted\r\n         *\r\n         * @param {string} event\r\n         * @param {...function} handlers\r\n         */\n\n    }, {\n        key: 'on',\n        value: function on(event) {\n            if (!this._events[event]) {\n                this._events[event] = [];\n            }\n\n            var i = 0;\n            var s = arguments.length <= 1 ? 0 : arguments.length - 1;\n\n            for (; i < s; i++) {\n                this._events[event].push(arguments.length <= i + 1 ? undefined : arguments[i + 1]);\n            }\n        }\n\n        /**\r\n         * Un-registers previously registered event handlers\r\n         *\r\n         * @param {string} event\r\n         * @param {...function} handlers\r\n         */\n\n    }, {\n        key: 'off',\n        value: function off(event) {\n            if (!this._events[event]) {\n                return;\n            }\n\n            var i = 0;\n            var s = arguments.length <= 1 ? 0 : arguments.length - 1;\n\n            for (; i < s; i++) {\n                var _handler = arguments.length <= i + 1 ? undefined : arguments[i + 1];\n                var index = void 0;\n\n                while (~(index = this._events[event].indexOf(_handler))) {\n                    this._events[event].splice(index, 1);\n                }\n            }\n        }\n\n        /**\r\n         * Removes all listeners for a given event\r\n         *\r\n         * @param {string} event\r\n         */\n\n    }, {\n        key: 'removeAllListeners',\n        value: function removeAllListeners(event) {\n            delete this._events[event];\n        }\n    }, {\n        key: 'listeners',\n        get: function get() {\n            return this._events;\n        }\n    }]);\n\n    return EventEmitter;\n}();\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n/* jshint -W079 */\n\n/**\r\n * @ignore\r\n * @typedef {object} ns\r\n */\n\n/* istanbul ignore next */\n/**\r\n * @type {function(\r\n *   callback: function(time: number): number,\r\n *   element?: HTMLElement,\r\n * )}\r\n * @access private\r\n */\n\n\nvar requestAnimationFrame = vendorize('requestAnimationFrame') || function (callback) {\n    return setTimeout(function () {\n        return callback(new Date().getTime());\n    }, 1000 / 60);\n};\n\n/**\r\n * Generic AnimationRule function interface\r\n *\r\n * @typedef {function(percent: number): number} AnimationRule\r\n */\n\n/**\r\n * Callback for animation step draw event.\r\n * It will be called each time animation step is executed, bypassing\r\n * as first argument a percent of animation completeness. It is expected\r\n * that this callback will do an actual work of animating an elements or\r\n * whatever, as far as animation engine is just calculating and executing\r\n * animation steps without any knowledge about things under animation.\r\n *\r\n * @typedef {function(percent: number): *} DrawEventCallback\r\n */\n\n/**\r\n * Callback for animation complete event.\r\n * It is called once each animation is complete.\r\n *\r\n * @typedef {function(): *} EndEventCallback\r\n */\n\n/**\r\n * Predefined known animation rules.\r\n * It's a simple collection of math for some most used animations.\r\n *\r\n * @typedef {{\r\n *   linear: AnimationRule,\r\n *   quad: AnimationRule,\r\n *   dequad: AnimationRule,\r\n *   quint: AnimationRule,\r\n *   dequint: AnimationRule,\r\n *   cycle: AnimationRule,\r\n *   decycle: AnimationRule,\r\n *   bounce: AnimationRule,\r\n *   debounce: AnimationRule,\r\n *   elastic: AnimationRule,\r\n *   delastic: AnimationRule,\r\n * }} AnimationRules\r\n */\n\n/* istanbul ignore next: no reason covering this */\nvar rules = {\n    linear: function linear(p) {\n        return p;\n    },\n    quad: function quad(p) {\n        return Math.pow(p, 2);\n    },\n    dequad: function dequad(p) {\n        return 1 - rules.quad(1 - p);\n    },\n    quint: function quint(p) {\n        return Math.pow(p, 5);\n    },\n    dequint: function dequint(p) {\n        return 1 - Math.pow(1 - p, 5);\n    },\n    cycle: function cycle(p) {\n        return 1 - Math.sin(Math.acos(p));\n    },\n    decycle: function decycle(p) {\n        return Math.sin(Math.acos(1 - p));\n    },\n    bounce: function bounce(p) {\n        return 1 - rules.debounce(1 - p);\n    },\n    debounce: function debounce(p) {\n        var a = 0,\n            b = 1;\n        for (; 1; a += b, b /= 2) {\n            if (p >= (7 - 4 * a) / 11) {\n                return -Math.pow((11 - 6 * a - 11 * p) / 4, 2) + Math.pow(b, 2);\n            }\n        }\n    },\n    elastic: function elastic(p) {\n        return 1 - rules.delastic(1 - p);\n    },\n    delastic: function delastic(p) {\n        var x = 1.5;\n        return Math.pow(2, 10 * (p - 1)) * Math.cos(20 * Math.PI * x / 3 * p);\n    }\n};\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Evaluates animation step and decides if the next step required or\r\n * stops animation calling a proper events.\r\n *\r\n * @access private\r\n * @param {number} time\r\n * @param {DrawEventCallback} draw\r\n * @param {number} start\r\n * @param {AnimationRule} rule\r\n * @param {number} duration\r\n * @param {EndEventCallback} end\r\n * @param {Animation} anim\r\n */\nfunction step(time, draw, start, rule, duration, end, anim) {\n    if (typeof rule !== 'function') {\n        throw new TypeError('Invalid animation rule:', rule);\n    }\n\n    var progress = time - start;\n    var percent = progress / duration;\n    var animationTransformed = 0;\n\n    if (percent > 1) {\n        percent = 1;\n    }\n\n    if (percent !== 1) {\n        animationTransformed = rule(percent);\n\n        // make sure we have correct number after applying animation\n        // transformation\n        if (isFinite(animationTransformed) && !isNaN(animationTransformed)) {\n            percent = animationTransformed;\n        }\n    }\n\n    draw && draw(percent);\n\n    if (progress < duration) {\n        anim.frame = requestAnimationFrame(function (time) {\n            return step(time, draw, start, rule, duration, end, anim);\n        });\n    } else {\n        end && end();\n        anim.inProgress = false;\n    }\n}\n\n/**\r\n * Animation engine API for JavaScript-based animations.\r\n * This is simply an animation core framework which simplifies creation\r\n * of various animations for generic purposes.\r\n *\r\n * @example\r\n * // create 'linear' animation engine, 500ms duration\r\n * let linear = new Animation('linear', 500);\r\n *\r\n * // create 'elastic' animation engine\r\n * let elastic = new Animation('elastic');\r\n *\r\n * // define animation behavior\r\n * let bounced = new Animation('bounce', 500, percent => {\r\n *     let value = parseInt(percent * 100, 10);\r\n *\r\n *     $('div.bounced').css({\r\n *         width: value + '%',\r\n *         height: value + '%'\r\n *     });\r\n * });\r\n *\r\n * // execute animation\r\n * bounced.animate();\r\n *\r\n * // execute animation and handle when its finished\r\n * bounced.animate(null, () => {\r\n *    console.log('Animation finished!');\r\n * });\r\n */\n\nvar Animation = function () {\n\n    /**\r\n     * @constructor\r\n     * @param {string|AnimationRule} rule\r\n     * @param {number} duration\r\n     * @param {DrawEventCallback} [draw]\r\n     * @param {EndEventCallback} [end]\r\n     */\n    function Animation() {\n        var rule = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'linear';\n        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n        var draw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n        var end = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n        _classCallCheck(this, Animation);\n\n        /**\r\n         * Overall animation duration in milliseconds.\r\n         * By default is equal to 250 ms.\r\n         *\r\n         * @type {number}\r\n         */\n        this.duration = duration;\n\n        /**\r\n         * Animation rule. By default is linear animation.\r\n         * Animation rule is a subject to animation rules, which are\r\n         * a simple object containing math-based methods for calculating\r\n         * animation steps.\r\n         *\r\n         * @type {string|AnimationRule}\r\n         */\n        this.rule = rule;\n\n        /**\r\n         * Callback function for the animation step draw event.\r\n         *\r\n         * @type {DrawEventCallback}\r\n         */\n        this.draw = draw;\n\n        /**\r\n         * Callback for the animation complete event.\r\n         *\r\n         * @type {EndEventCallback}\r\n         */\n        this.end = end;\n\n        if (typeof this.draw !== 'function') {\n            throw new TypeError('Invalid animation draw callback:', draw);\n        }\n\n        if (typeof this.end !== 'function') {\n            throw new TypeError('Invalid animation end callback:', end);\n        }\n    }\n\n    /* istanbul ignore next: non-testable */\n    /**\r\n     * Performs animation calling each animation step draw callback and\r\n     * end callback at the end of animation. Callbacks are optional to this\r\n     * method call. If them are not bypassed will be used that ones which\r\n     * was pre-set on constructing an Animation object or pre-set after\r\n     * construction.\r\n     *\r\n     * @example\r\n     * function draw(percent) {\r\n     *     $('.my-animated-divs').css({\r\n     *         width: parseInt(percent * 100, 10) + '%'\r\n     *     });\r\n     * }\r\n     * function done() {\r\n     *     console.log('Animation complete!');\r\n     * }\r\n     *\r\n     * // Define 'draw' and 'end' callbacks on construction\r\n     * var animation = new Animation('cycle', 500, draw, done);\r\n     * animation.animate();\r\n     *\r\n     * // Define 'draw' and 'end' callbacks after construction\r\n     * var animation = new Animation('cycle', 500);\r\n     * animation.draw = draw;\r\n     * animation.end = done;\r\n     * animation.animate();\r\n     *\r\n     * // Define 'draw' and 'end' callbacks at animation\r\n     * var animation = new Animation('cycle', 500);\r\n     * animation.animate(draw, done);\r\n     *\r\n     * @param {DrawEventCallback} [draw]\r\n     * @param {EndEventCallback} [end]\r\n     */\n\n\n    _createClass(Animation, [{\n        key: 'animate',\n        value: function animate(draw, end) {\n            var _this = this;\n\n            this.frame && this.cancel();\n\n            // noinspection JSUnresolvedVariable\n            var start = window.performance && window.performance.now ? window.performance.now() : vendorize('animationStartTime') || Date.now();\n\n            draw = draw || this.draw;\n            end = end || this.end;\n\n            this.draw = draw;\n            this.end = end;\n\n            /**\r\n             * Current requested animation frame identifier\r\n             *\r\n             * @type {number}\r\n             */\n            this.frame = requestAnimationFrame(function (time) {\n                return step(time, draw, start, rules[_this.rule] || _this.rule, _this.duration, end, _this);\n            });\n        }\n\n        /**\r\n         * Cancels current animation if any\r\n         */\n\n    }, {\n        key: 'cancel',\n        value: function cancel() {\n            if (this.frame) {\n                var cancelAnimationFrame = vendorize('cancelAnimationFrame') ||\n                /* istanbul ignore next */\n                function (id) {};\n\n                cancelAnimationFrame(this.frame);\n                this.frame = null;\n            }\n        }\n\n        /**\r\n         * Destroys this object properly\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.cancel();\n            this.draw = null;\n            this.end = null;\n        }\n    }]);\n\n    return Animation;\n}();\n\n/**\r\n * Animation rules bound statically to Animation constructor.\r\n *\r\n * @type {AnimationRules}\r\n * @static\r\n */\n\n\nAnimation.rules = rules;\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n/**\r\n * @typedef {{ constructor: function(options: GenericOptions): GaugeInterface, draw: function(): GaugeInterface, destroy: function, update: function(options: GenericOptions) }} GaugeInterface\r\n */\n/**\r\n * @typedef {{parse: function, stringify: function}} JSON\r\n * @external {JSON} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/JSON\r\n */\n/**\r\n * @ignore\r\n * @typedef {{MutationObserver: function}} ns\r\n */\n\n/**\r\n * DOM Observer.\r\n * It will observe DOM document for a configured element types and\r\n * instantiate associated Types for an existing or newly added DOM elements\r\n *\r\n * @example\r\n * class ProgressBar {\r\n *     constructor(options) {}\r\n *     draw() {}\r\n * }\r\n *\r\n * // It will observe DOM document for elements <div>\r\n * // having attribute 'data-type=\"progress\"'\r\n * // and instantiate for each new instance of ProgressBar\r\n *\r\n * new DomParser({color: 'red'}, 'div', 'progress', ProgressBar);\r\n *\r\n * // assume we could have HTML like this\r\n * // <div data-type=\"progress\" color=\"blue\"></div>\r\n * // in this case all matching attributes names for a given options will be\r\n * // parsed and bypassed to an instance from HTML attributes\r\n */\n\nvar DomObserver = function () {\n\n    /**\r\n     * @constructor\r\n     * @param {object} options\r\n     * @param {string} element\r\n     * @param {string} type\r\n     */\n    function DomObserver(options, element, type) {\n        _classCallCheck(this, DomObserver);\n\n        //noinspection JSUnresolvedVariable\n        /**\r\n         * Default instantiation options for the given type\r\n         *\r\n         * @type {Object}\r\n         */\n        this.options = options;\n\n        /**\r\n         * Name of an element to lookup/observe\r\n         *\r\n         * @type {string}\r\n         */\n        this.element = element.toLowerCase();\n\n        /**\r\n         * data-type attribute value to lookup\r\n         *\r\n         * @type {string}\r\n         */\n        this.type = DomObserver.toDashed(type);\n\n        /**\r\n         * Actual type constructor to instantiate for each found element\r\n         *\r\n         * @type {Function}\r\n         */\n        this.Type = ns[type];\n\n        /**\r\n         * Signals if mutations observer for this type or not\r\n         *\r\n         * @type {boolean}\r\n         */\n        this.mutationsObserved = false;\n\n        /**\r\n         * Flag specifies whenever the browser supports observing\r\n         * of DOM tree mutations or not\r\n         *\r\n         * @type {boolean}\r\n         */\n        this.isObservable = !!window.MutationObserver;\n\n        /* istanbul ignore next: this should be tested with end-to-end tests */\n        if (!window.GAUGES_NO_AUTO_INIT) {\n            DomObserver.domReady(this.traverse.bind(this));\n        }\n    }\n\n    /**\r\n     * Checks if given node is valid node to process\r\n     *\r\n     * @param {Node|HTMLElement} node\r\n     * @returns {boolean}\r\n     */\n\n\n    _createClass(DomObserver, [{\n        key: 'isValidNode',\n        value: function isValidNode(node) {\n            //noinspection JSUnresolvedVariable\n            return !!(node.tagName && node.tagName.toLowerCase() === this.element && node.getAttribute('data-type') === this.type);\n        }\n\n        /**\r\n         * Traverse entire current DOM tree and process matching nodes.\r\n         * Usually it should be called only once on document initialization.\r\n         */\n\n    }, {\n        key: 'traverse',\n        value: function traverse() {\n            var elements = document.getElementsByTagName(this.element);\n            var i = 0,\n                s = elements.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                this.process(elements[i]);\n            }\n\n            if (this.isObservable && !this.mutationsObserved) {\n                new MutationObserver(this.observe.bind(this)).observe(document.body, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true,\n                    attributeOldValue: true,\n                    characterDataOldValue: true\n                });\n\n                this.mutationsObserved = true;\n            }\n        }\n\n        /**\r\n         * Observes given mutation records for an elements to process\r\n         *\r\n         * @param {MutationRecord[]} records\r\n         */\n\n    }, {\n        key: 'observe',\n        value: function observe(records) {\n            var i = 0;\n            var s = records.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var record = records[i];\n\n                if (record.type === 'attributes' && record.attributeName === 'data-type' && this.isValidNode(record.target) && record.oldValue !== this.type) // skip false-positive mutations\n                    {\n                        setTimeout(this.process.bind(this, record.target));\n                    } else if (record.addedNodes && record.addedNodes.length) {\n                    var ii = 0;\n                    var ss = record.addedNodes.length;\n\n                    for (; ii < ss; ii++) {\n                        setTimeout(this.process.bind(this, record.addedNodes[ii]));\n                    }\n                }\n            }\n        }\n\n        /**\r\n         * Parses given attribute value to a proper JavaScript value.\r\n         * For example it will parse some stringified value to a proper type\r\n         * value, e.g. 'true' => true, 'null' => null, '{\"prop\": 20}' => {prop: 20}\r\n         *\r\n         * @param {*} value\r\n         * @return {*}\r\n         */\n\n    }, {\n        key: 'process',\n\n\n        /**\r\n         * Processes a given node, instantiating a proper type constructor for it\r\n         *\r\n         * @param {Node|HTMLElement} node\r\n         * @returns {GaugeInterface|null}\r\n         */\n        value: function process(node) {\n            var _this2 = this;\n\n            if (!this.isValidNode(node)) return null;\n\n            var prop = void 0;\n            var options = JSON.parse(JSON.stringify(this.options));\n            var instance = null;\n\n            for (prop in options) {\n                /* istanbul ignore else: non-testable in most cases */\n                if (options.hasOwnProperty(prop)) {\n                    var attributeName = DomObserver.toAttributeName(prop);\n                    var attributeValue = DomObserver.parse(node.getAttribute(attributeName));\n\n                    if (attributeValue !== null && attributeValue !== undefined) {\n                        options[prop] = attributeValue;\n                    }\n                }\n            }\n\n            options.renderTo = node;\n            instance = new this.Type(options);\n            instance.draw && instance.draw();\n\n            if (!this.isObservable) return instance;\n\n            instance.observer = new MutationObserver(function (records) {\n                records.forEach(function (record) {\n                    if (record.type === 'attributes') {\n                        var attr = record.attributeName.toLowerCase();\n                        var type = node.getAttribute(attr).toLowerCase();\n\n                        if (attr === 'data-type' && type && type !== _this2.type) {\n                            instance.observer.disconnect();\n                            delete instance.observer;\n                            instance.destroy && instance.destroy();\n                        } else if (attr.substr(0, 5) === 'data-') {\n                            var _prop = attr.substr(5).split('-').map(function (part, i) {\n                                return !i ? part : part.charAt(0).toUpperCase() + part.substr(1);\n                            }).join('');\n                            var _options = {};\n\n                            _options[_prop] = DomObserver.parse(node.getAttribute(record.attributeName));\n\n                            if (_prop === 'value') {\n                                instance && (instance.value = _options[_prop]);\n                            } else {\n                                instance.update && instance.update(_options);\n                            }\n                        }\n                    }\n                });\n            });\n\n            //noinspection JSCheckFunctionSignatures\n            instance.observer.observe(node, { attributes: true });\n\n            return instance;\n        }\n\n        /**\r\n         * Transforms camelCase string to dashed string\r\n         *\r\n         * @static\r\n         * @param {string} camelCase\r\n         * @return {string}\r\n         */\n\n    }], [{\n        key: 'parse',\n        value: function parse(value) {\n            // parse boolean\n            if (value === 'true') return true;\n            if (value === 'false') return false;\n\n            // parse undefined\n            if (value === 'undefined') return undefined;\n\n            // parse null\n            if (value === 'null') return null;\n\n            // Comma-separated strings to array parsing.\n            // It won't match strings which contains non alphanumeric characters to\n            // prevent strings like 'rgba(0,0,0,0)' or JSON-like from being parsed.\n            // Typically it simply allows easily declare arrays as comma-separated\n            // numbers or plain strings. If something more complicated is\n            // required it can be declared using JSON format syntax\n            if (/^[-+#.\\w\\d\\s]+(?:,[-+#.\\w\\d\\s]*)+$/.test(value)) {\n                return value.split(',');\n            }\n\n            // parse JSON\n            try {\n                return JSON.parse(value);\n            } catch (e) {}\n\n            // plain value - no need to parse\n            return value;\n        }\n    }, {\n        key: 'toDashed',\n        value: function toDashed(camelCase) {\n            var arr = camelCase.split(/(?=[A-Z])/);\n            var i = 1;\n            var s = arr.length;\n            var str = arr[0].toLowerCase();\n\n            for (; i < s; i++) {\n                str += '-' + arr[i].toLowerCase();\n            }\n\n            return str;\n        }\n\n        /**\r\n         * Transforms dashed string to CamelCase representation\r\n         *\r\n         * @param {string} dashed\r\n         * @param {boolean} [capitalized]\r\n         * @return {string}\r\n         */\n\n    }, {\n        key: 'toCamelCase',\n        value: function toCamelCase(dashed) {\n            var capitalized = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var arr = dashed.split(/-/);\n            var i = 0;\n            var s = arr.length;\n            var str = '';\n\n            for (; i < s; i++) {\n                if (!(i || capitalized)) {\n                    str += arr[i].toLowerCase();\n                } else {\n                    str += arr[i][0].toUpperCase() + arr[i].substr(1).toLowerCase();\n                }\n            }\n\n            return str;\n        }\n\n        /**\r\n         * Transforms camel case property name to dash separated attribute name\r\n         *\r\n         * @static\r\n         * @param {string} str\r\n         * @returns {string}\r\n         */\n\n    }, {\n        key: 'toAttributeName',\n        value: function toAttributeName(str) {\n            return 'data-' + DomObserver.toDashed(str);\n        }\n\n        /**\r\n         * Cross-browser DOM ready handler\r\n         *\r\n         * @static\r\n         * @param {Function} handler\r\n         */\n\n    }, {\n        key: 'domReady',\n        value: function domReady(handler) {\n            if (/comp|inter|loaded/.test((window.document || {}).readyState + '')) return handler();\n\n            if (window.addEventListener) window.addEventListener('DOMContentLoaded', handler, false);else if (window.attachEvent) window.attachEvent('onload', handler);\n        }\n    }]);\n\n    return DomObserver;\n}();\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\n/**\r\n * @ignore\r\n * @typedef {object} ns\r\n */\n\n/**\r\n * Drawings on canvas using hidden canvas as a cache for better\r\n * performance drawings during canvas animations. SmartCanvas also\r\n * adopts a canvas to\r\n */\n\n\nvar SmartCanvas = function () {\n\n    /**\r\n     * @constructor\r\n     * @param {HTMLCanvasElement} canvas\r\n     * @param {number} [width]\r\n     * @param {number} [height]\r\n     */\n    function SmartCanvas(canvas, width, height) {\n        _classCallCheck(this, SmartCanvas);\n\n        SmartCanvas.collection.push(this);\n\n        /**\r\n         * Canvas base width\r\n         *\r\n         * @type {number}\r\n         */\n        this.width = width || 0;\n\n        /**\r\n         * Canvas base height\r\n         *\r\n         * @type {number}\r\n         */\n        this.height = height || 0;\n\n        /**\r\n         * Target drawings canvas element\r\n         *\r\n         * @type {HTMLCanvasElement}\r\n         */\n        this.element = canvas;\n\n        this.init();\n    }\n\n    /**\r\n     * Initializes canvases and contexts\r\n     */\n\n\n    _createClass(SmartCanvas, [{\n        key: 'init',\n        value: function init() {\n            var pixelRatio = SmartCanvas.pixelRatio;\n\n            this.element.width = this.width * pixelRatio;\n            this.element.height = this.height * pixelRatio;\n\n            this.element.style.width = this.width + 'px';\n            this.element.style.height = this.height + 'px';\n\n            /**\r\n             * Canvas caching element\r\n             *\r\n             * @type {HTMLCanvasElement|Node}\r\n             */\n            this.elementClone = this.element.cloneNode(true);\n\n            //noinspection JSUnresolvedVariable\n            /**\r\n             * Target drawings canvas element 2D context\r\n             *\r\n             * @type {CanvasRenderingContext2D}\r\n             */\n            this.context = this.element.getContext('2d');\n\n            /**\r\n             * Canvas caching element 2D context\r\n             *\r\n             * @type {CanvasRenderingContext2D}\r\n             */\n            this.contextClone = this.elementClone.getContext('2d');\n\n            /**\r\n             * Actual drawings width\r\n             *\r\n             * @type {number}\r\n             */\n            this.drawWidth = this.element.width;\n\n            /**\r\n             * Actual drawings height\r\n             *\r\n             * @type {number}\r\n             */\n            this.drawHeight = this.element.height;\n\n            /**\r\n             * X-coordinate of drawings zero point\r\n             *\r\n             * @type {number}\r\n             */\n            this.drawX = this.drawWidth / 2;\n\n            /**\r\n             * Y-coordinate of drawings zero point\r\n             *\r\n             * @type {number}\r\n             */\n            this.drawY = this.drawHeight / 2;\n\n            /**\r\n             * Minimal side length in pixels of the drawing\r\n             *\r\n             * @type {number}\r\n             */\n            this.minSide = this.drawX < this.drawY ? this.drawX : this.drawY;\n\n            this.elementClone.initialized = false;\n\n            this.contextClone.translate(this.drawX, this.drawY);\n            this.contextClone.save();\n\n            this.context.translate(this.drawX, this.drawY);\n            this.context.save();\n\n            this.context.max = this.contextClone.max = this.minSide;\n            this.context.maxRadius = this.contextClone.maxRadius = null;\n        }\n\n        /**\r\n         * Destroys this object, removing the references from memory\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = SmartCanvas.collection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                SmartCanvas.collection.splice(index, 1);\n            }\n\n            this.context.clearRect(-this.drawX, -this.drawY, this.drawWidth, this.drawHeight);\n\n            // dereference all created elements\n            this.context.max = null;\n            delete this.context.max;\n\n            this.context.maxRadius = null;\n            delete this.context.maxRadius;\n\n            this.context = null;\n            this.contextClone = null;\n            this.elementClone = null;\n            this.element = null;\n\n            /**\r\n             * On canvas redraw event callback\r\n             *\r\n             * @type {function|null|undefined}\r\n             */\n            this.onRedraw = null;\n        }\n\n        /**\r\n         * Commits the drawings\r\n         */\n\n    }, {\n        key: 'commit',\n        value: function commit() {\n            var scale = SmartCanvas.pixelRatio;\n\n            if (scale !== 1) {\n                this.contextClone.scale(scale, scale);\n                this.contextClone.save();\n            }\n\n            return this;\n        }\n\n        /**\r\n         * Redraw this object\r\n         */\n\n    }, {\n        key: 'redraw',\n        value: function redraw() {\n            this.init();\n\n            /**\r\n             * On canvas redraw event callback\r\n             *\r\n             * @type {function(): *}\r\n             */\n            this.onRedraw && this.onRedraw();\n\n            return this;\n        }\n\n        /**\r\n         * Returns current device pixel ratio\r\n         *\r\n         * @returns {number}\r\n         */\n\n    }], [{\n        key: 'redraw',\n\n\n        /**\r\n         * Forces redraw all canvas in the current collection\r\n         */\n        value: function redraw() {\n            var i = 0;\n            var s = SmartCanvas.collection.length;\n\n            for (; i < s; i++) {\n                SmartCanvas.collection[i].redraw();\n            }\n        }\n    }, {\n        key: 'pixelRatio',\n        get: function get() {\n            /* istanbul ignore next */\n            //noinspection JSUnresolvedVariable\n            return window.devicePixelRatio || 1;\n        }\n    }]);\n\n    return SmartCanvas;\n}();\n\nSmartCanvas.collection = [];\n\n/* istanbul ignore next: very browser-specific testing required to cover */\n//noinspection JSUnresolvedVariable\nif (window.matchMedia) {\n    //noinspection JSUnresolvedFunction\n    window.matchMedia('screen and (min-resolution: 2dppx)').addListener(SmartCanvas.redraw);\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Describes rendering target element. Can be either string identifier of\n * the element or the element itself.\n *\n * @typedef {HTMLElement|string} RenderTarget\n */\n\n/**\n * Highlight area definition.\n * It describes highlight area starting from value to value using\n * color. Color can be describes with hex, rgb or rgba value.\n *\n * @typedef {{ from: number, to: number, color: string}} Highlight\n */\n\n/**\n * Shared generic gauges options\n *\n * @type {{renderTo: RenderTarget, width: number, height: number, minValue: number, maxValue: number, value: number, units: string|boolean, majorTicks: number[]|string[], exactTicks: boolean, minorTicks: number, strokeTicks: boolean, animatedValue: boolean, animateOnInit: boolean, title: string|boolean, borders: boolean, valueInt: number, valueDec: number, majorTicksInt: number, majorTicksDec: number, animation: boolean, animationDuration: number, animationRule: string|AnimationRule, colorPlate: string, colorPlateEnd: string, colorMajorTicks: string, colorMinorTicks: string, colorStrokeTicks: string, colorTitle: string, colorUnits: string, colorNumbers: string, colorNeedle: string, colorNeedleEnd: string, colorValueText: string, colorValueTextShadow: string, colorBorderShadow: string, colorBorderOuter: string, colorBorderOuterEnd: string, colorBorderMiddle: string, colorBorderMiddleEnd: string, colorBorderInner: string, colorBorderInnerEnd: string, colorValueBoxRect: string, colorValueBoxRectEnd: string, colorValueBoxBackground: string, colorValueBoxShadow: string, colorNeedleShadowUp: string, colorNeedleShadowDown: string, needle: boolean, needleShadow: boolean, needleType: string, needleStart: number, needleEnd: number, needleWidth: number, borderOuterWidth: number, borderMiddleWidth: number, borderInnerWidth: number, borderShadowWidth: number, valueBox: boolean, valueBoxWidth: number, valueBoxStroke: number, valueText: string, valueTextShadow: boolean, valueBoxBorderRadius: number, highlights: Highlight[], highlightsWidth: number, fontNumbers: string, fontTitle: string, fontUnits: string, fontValue: string, fontTitleSize: number, fontValueSize: number, fontUnitsSize: number, fontNumbersSize: number, fontNumbersStyle: string, fontTitleStyle: string, fontUnitsStyle: string, fontValueStyle: string, fontNumbersWeight: string, fontTitleWeight: string, fontUnitsWeight: string, fontValueWeight: string, barWidth: number, barStrokeWidth: number, barProgress: boolean, colorBar: string, colorBarStroke: string, colorBarProgress: string, colorBarShadow: string, barShadow: number, listeners: object}} GenericOptions\n */\nvar GenericOptions = {\n    // basic options\n    renderTo: null,\n    width: 0,\n    height: 0,\n    minValue: 0,\n    maxValue: 100,\n    value: 0,\n    units: false,\n    exactTicks: false,\n    majorTicks: [0, 20, 40, 60, 80, 100],\n    minorTicks: 10,\n    strokeTicks: true,\n    animatedValue: false,\n    animateOnInit: false,\n    title: false,\n    borders: true,\n    numbersMargin: 1,\n    clampProgressNeedle: false,\n    needleClampFrac: 0.01,\n    needleClampSnap: true,\n\n    majorTicksApproxCount: null,\n    majorTicksRound: null,\n    majorTicksBase: null,\n    majorTicksNumbers: null,\n    majorTicksMinorRatio: null,\n\n    listeners: null,\n\n    // number formats\n    valueInt: 3,\n    valueDec: 2,\n    majorTicksInt: 1,\n    majorTicksDec: 0,\n\n    // animations\n    animation: true,\n    animationDuration: 500,\n    animationRule: 'cycle',\n\n    // colors\n    colorPlate: '#fff',\n    colorPlateEnd: '',\n    colorMajorTicks: '#444',\n    colorMinorTicks: '#666',\n    colorStrokeTicks: '',\n    colorTitle: '#888',\n    colorUnits: '#888',\n    colorNumbers: '#444',\n    colorNeedle: 'rgba(240,128,128,1)',\n    colorNeedleEnd: 'rgba(255,160,122,.9)',\n    colorValueText: '#444',\n    colorValueTextShadow: 'rgba(0,0,0,0.3)',\n    colorBorderShadow: 'rgba(0,0,0,0.5)',\n    colorBorderOuter: '#ddd',\n    colorBorderOuterEnd: '#aaa',\n    colorBorderMiddle: '#eee',\n    colorBorderMiddleEnd: '#f0f0f0',\n    colorBorderInner: '#fafafa',\n    colorBorderInnerEnd: '#ccc',\n    colorValueBoxRect: '#888',\n    colorValueBoxRectEnd: '#666',\n    colorValueBoxBackground: '#babab2',\n    colorValueBoxShadow: 'rgba(0,0,0,1)',\n    colorNeedleShadowUp: 'rgba(2,255,255,0.2)',\n    colorNeedleShadowDown: 'rgba(188,143,143,0.45)',\n    colorBarStroke: '#222',\n    colorBar: '#ccc',\n    colorBarProgress: '#888',\n    colorBarShadow: '#000',\n\n    fontNumbers: 'Arial',\n    fontTitle: 'Arial',\n    fontUnits: 'Arial',\n    fontValue: 'Arial',\n\n    fontNumbersSize: 20,\n    fontTitleSize: 24,\n    fontUnitsSize: 22,\n    fontValueSize: 26,\n\n    fontNumbersStyle: 'normal',\n    fontTitleStyle: 'normal',\n    fontUnitsStyle: 'normal',\n    fontValueStyle: 'normal',\n\n    fontNumbersWeight: 'normal',\n    fontTitleWeight: 'normal',\n    fontUnitsWeight: 'normal',\n    fontValueWeight: 'normal',\n\n    // needle\n    needle: true,\n    needleShadow: true,\n    needleType: 'arrow',\n    needleStart: 5,\n    needleEnd: 85,\n    needleWidth: 4,\n\n    // borders\n    borderOuterWidth: 3,\n    borderMiddleWidth: 3,\n    borderInnerWidth: 3,\n    borderShadowWidth: 3,\n\n    // value and highlights\n    valueBox: true,\n    valueBoxStroke: 5,\n    valueBoxWidth: 0,\n    valueText: '',\n    valueTextShadow: true,\n    valueBoxBorderRadius: 2.5,\n\n    // highlights\n    highlights: [{ from: 20, to: 60, color: '#eee' }, { from: 60, to: 80, color: '#ccc' }, { from: 80, to: 100, color: '#999' }],\n    highlightsWidth: 15,\n    highlightsLineCap: 'butt',\n\n    // progress bar\n    barWidth: 20, // percents\n    barStrokeWidth: 0, // pixels\n    barProgress: true,\n    barShadow: 0\n};\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\n/**\r\n * Gauge collections type.\r\n *\r\n * It is used ES5 declaration here, because babel\r\n * transpiles inheritance incorrectly in this case.\r\n *\r\n * @class Collection\r\n * @constructor\r\n */\nfunction Collection() {\n    Array.prototype.constructor.apply(this, arguments);\n}\n\nCollection.prototype = Object.create(Array.prototype);\nCollection.prototype.constructor = Collection;\n\n/**\r\n * Returns gauge object by its identifier or index in the collection\r\n *\r\n * @param {string|number} id\r\n * @return {*}\r\n */\nCollection.prototype.get = function (id) {\n    if (typeof id === 'string') {\n        var i = 0;\n        var s = this.length;\n\n        for (; i < s; i++) {\n            var canvas = this[i].options.renderTo.tagName ? this[i].options.renderTo :\n            /* istanbul ignore next: should be tested with e2e tests */\n            document.getElementById(this[i].options.renderTo || '');\n\n            if (canvas.getAttribute('id') === id) {\n                return this[i];\n            }\n        }\n    } else if (typeof id === 'number') {\n        return this[id];\n    }\n\n    return null;\n};\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\nvar version = '2.1.9';\n\nvar round = Math.round;\nvar abs = Math.abs;\n\nvar gauges = new Collection();\n\ngauges.version = version;\n\n/**\r\n * Basic abstract BaseGauge class implementing common functionality\r\n * for different type of gauges.\r\n *\r\n * It should not be instantiated directly but must be extended by a final\r\n * gauge implementation.\r\n *\r\n * @abstract\r\n * @example\r\n *\r\n * class MyCoolGauge extends BaseGauge {\r\n *\r\n *     // theses methods below MUST be implemented:\r\n *\r\n *     constructor(options) {\r\n *        // ... do something with options\r\n *        super(options);\r\n *        // ... implement anything else\r\n *     }\r\n *\r\n *     draw() {\r\n *         // ... some implementation here\r\n *         return this;\r\n *     }\r\n * }\r\n */\n\nvar BaseGauge = function (_EventEmitter) {\n    _inherits(BaseGauge, _EventEmitter);\n\n    /**\r\n     * Fired each time gauge is initialized on a page\r\n     *\r\n     * @event BaseGauge#init\r\n     */\n\n    /**\r\n     * Fired each time gauge scene is rendered\r\n     *\r\n     * @event BaseGauge#render\r\n     */\n\n    /**\r\n     * Fired each time gauge object is destroyed\r\n     *\r\n     * @event BaseGauge#destroy\r\n     */\n\n    /**\r\n     * Fired each time before animation is started on the gauge\r\n     *\r\n     * @event BaseGauge#animationStart\r\n     */\n\n    /**\r\n     * Fired each time animation scene is complete\r\n     *\r\n     * @event BaseGauge#animate\r\n     * @type {number} percent\r\n     * @type {number} value\r\n     */\n\n    /**\r\n     * Fired each time animation is complete on the gauge\r\n     *\r\n     * @event BaseGauge#animationEnd\r\n     */\n\n    /**\r\n     * @event BaseGauge#value\r\n     * @type {number} newValue\r\n     * @type {number} oldValue\r\n     */\n\n    /**\r\n     * @constructor\r\n     * @abstract\r\n     * @param {GenericOptions} options\r\n     */\n    function BaseGauge(options) {\n        _classCallCheck(this, BaseGauge);\n\n        var _this3 = _possibleConstructorReturn(this, (BaseGauge.__proto__ || Object.getPrototypeOf(BaseGauge)).call(this));\n\n        var className = _this3.constructor.name;\n\n        if (className === 'BaseGauge') {\n            throw new TypeError('Attempt to instantiate abstract class!');\n        }\n\n        gauges.push(_this3);\n\n        if (options.listeners) {\n            Object.keys(options.listeners).forEach(function (event) {\n                var handlers = options.listeners[event] instanceof Array ? options.listeners[event] : [options.listeners[event]];\n\n                handlers.forEach(function (handler) {\n                    _this3.on(event, handler);\n                });\n            });\n        }\n\n        //noinspection JSUnresolvedVariable\n        /**\r\n         * Gauges version string\r\n         *\r\n         * @type {string}\r\n         */\n        _this3.version = version;\n\n        /**\r\n         * Gauge type class\r\n         *\r\n         * @type {BaseGauge} type\r\n         */\n        _this3.type = ns[className] || BaseGauge;\n\n        /**\r\n         * True if gauge has been drawn for the first time, false otherwise.\r\n         *\r\n         * @type {boolean}\r\n         */\n        _this3.initialized = false;\n\n        options.minValue = parseFloat(options.minValue);\n        options.maxValue = parseFloat(options.maxValue);\n        options.value = parseFloat(options.value) || 0;\n\n        if (!options.borders) {\n            options.borderInnerWidth = options.borderMiddleWidth = options.borderOuterWidth = 0;\n        }\n\n        if (!options.renderTo) {\n            throw TypeError('Canvas element was not specified when creating ' + 'the Gauge object!');\n        }\n\n        var canvas = options.renderTo.tagName ? options.renderTo :\n        /* istanbul ignore next: to be tested with e2e tests */\n        document.getElementById(options.renderTo);\n\n        if (!(canvas instanceof HTMLCanvasElement)) {\n            throw TypeError('Given gauge canvas element is invalid!');\n        }\n\n        options.width = parseFloat(options.width) || 0;\n        options.height = parseFloat(options.height) || 0;\n\n        if (!options.width || !options.height) {\n            if (!options.width) options.width = canvas.parentNode ? canvas.parentNode.offsetWidth : canvas.offsetWidth;\n            if (!options.height) options.height = canvas.parentNode ? canvas.parentNode.offsetHeight : canvas.offsetHeight;\n        }\n\n        /**\r\n         * Gauge options\r\n         *\r\n         * @type {GenericOptions} options\r\n         */\n        _this3.options = options || {};\n\n        if (_this3.options.animateOnInit) {\n            _this3._value = _this3.options.value;\n            _this3.options.value = _this3.options.minValue;\n        }\n\n        /**\r\n         * @type {SmartCanvas} canvas\r\n         */\n        _this3.canvas = new SmartCanvas(canvas, options.width, options.height);\n        _this3.canvas.onRedraw = _this3.draw.bind(_this3);\n\n        /**\r\n         * @type {Animation} animation\r\n         */\n        _this3.animation = new Animation(options.animationRule, options.animationDuration);\n        return _this3;\n    }\n\n    /**\r\n     * Sets new value for this gauge.\r\n     * If gauge is animated by configuration it will trigger a proper animation.\r\n     * Upsetting a value triggers gauge redraw.\r\n     *\r\n     * @param {number} value\r\n     */\n\n\n    _createClass(BaseGauge, [{\n        key: 'update',\n\n\n        /**\r\n         * Updates gauge configuration options at runtime and redraws the gauge\r\n         *\r\n         * @param {RadialGaugeOptions} options\r\n         * @returns {BaseGauge}\r\n         */\n        value: function update(options) {\n            Object.assign(this.options, this.type.configure(options || {}));\n\n            this.canvas.width = this.options.width;\n            this.canvas.height = this.options.height;\n\n            this.animation.rule = this.options.animationRule;\n            this.animation.duration = this.options.animationDuration;\n\n            this.canvas.redraw();\n\n            return this;\n        }\n\n        /**\r\n         * Performs destruction of this object properly\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = gauges.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                //noinspection JSUnresolvedFunction\n                gauges.splice(index, 1);\n            }\n\n            this.canvas.destroy();\n            this.canvas = null;\n\n            this.animation.destroy();\n            this.animation = null;\n\n            this.emit('destroy');\n        }\n\n        /**\r\n         * Returns gauges version string\r\n         *\r\n         * @return {string}\r\n         */\n\n    }, {\n        key: 'draw',\n\n\n        /**\r\n         * Triggering gauge render on a canvas.\r\n         *\r\n         * @abstract\r\n         * @returns {BaseGauge}\r\n         */\n        value: function draw() {\n            if (this.options.animateOnInit && !this.initialized) {\n                this.value = this._value;\n                this.initialized = true;\n                this.emit('init');\n            }\n\n            this.emit('render');\n\n            return this;\n        }\n\n        /**\r\n         * Inject given gauge object into DOM\r\n         *\r\n         * @param {string} type\r\n         * @param {GenericOptions} options\r\n         */\n\n    }, {\n        key: 'value',\n        set: function set(value) {\n            var _this4 = this;\n\n            value = BaseGauge.ensureValue(value, this.options.minValue);\n\n            var fromValue = this.options.value;\n\n            if (value === fromValue) {\n                return;\n            }\n\n            if (this.options.animation) {\n                if (this.animation.frame) {\n                    // animation is already in progress -\n                    // forget related old animation value\n                    // @see https://github.com/Mikhus/canvas-gauges/issues/94\n                    this.options.value = this._value;\n\n                    // if there is no actual value change requested stop it\n                    if (this._value === value) {\n                        this.animation.cancel();\n                        delete this._value;\n                        return;\n                    }\n                }\n\n                /**\r\n                 * @type {number}\r\n                 * @access private\r\n                 */\n                if (this._value === undefined) {\n                    this._value = value;\n                }\n\n                this.emit('animationStart');\n\n                this.animation.animate(function (percent) {\n                    var newValue = fromValue + (value - fromValue) * percent;\n\n                    _this4.options.animatedValue && _this4.emit('value', newValue, _this4.value);\n\n                    _this4.options.value = newValue;\n\n                    _this4.draw();\n\n                    _this4.emit('animate', percent, _this4.options.value);\n                }, function () {\n                    if (_this4._value !== undefined) {\n                        _this4.emit('value', _this4._value, _this4.value);\n                        _this4.options.value = _this4._value;\n                        delete _this4._value;\n                    }\n\n                    _this4.draw();\n                    _this4.emit('animationEnd');\n                });\n            } else {\n                this.emit('value', value, this.value);\n                this.options.value = value;\n                this.draw();\n            }\n        }\n\n        /**\r\n         * Returns current value of the gauge\r\n         *\r\n         * @return {number}\r\n         */\n        ,\n        get: function get() {\n            return typeof this._value === 'undefined' ? this.options.value : this._value;\n        }\n\n        /**\r\n         * Updates gauge options\r\n         *\r\n         * @param {*} options\r\n         * @return {BaseGauge}\r\n         * @access protected\r\n         */\n\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            return options;\n        }\n    }, {\n        key: 'initialize',\n        value: function initialize(type, options) {\n            return new DomObserver(options, 'canvas', type);\n        }\n\n        /**\r\n         * Initializes gauge from a given HTML element\r\n         * (given element should be valid HTML canvas gauge definition)\r\n         *\r\n         * @param {HTMLElement} element\r\n         */\n\n    }, {\n        key: 'fromElement',\n        value: function fromElement(element) {\n            var type = DomObserver.toCamelCase(element.getAttribute('data-type'));\n            var attributes = element.attributes;\n            var i = 0;\n            var s = attributes.length;\n            var options = {};\n\n            if (!type) {\n                return;\n            }\n\n            if (!/Gauge$/.test(type)) {\n                type += 'Gauge';\n            }\n\n            for (; i < s; i++) {\n                options[DomObserver.toCamelCase(attributes[i].name.replace(/^data-/, ''), false)] = DomObserver.parse(attributes[i].value);\n            }\n\n            new DomObserver(options, element.tagName, type).process(element);\n        }\n\n        /**\r\n         * Ensures value is proper number\r\n         *\r\n         * @param {*} value\r\n         * @param {number} min\r\n         * @return {number}\r\n         */\n\n    }, {\n        key: 'ensureValue',\n        value: function ensureValue(value) {\n            var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            value = parseFloat(value);\n\n            if (isNaN(value) || !isFinite(value)) {\n                value = parseFloat(min) || 0;\n            }\n\n            return value;\n        }\n\n        /**\r\n         * Corrects javascript modulus bug\r\n         * @param {number} n\r\n         * @param {number} m\r\n         * @return {number}\r\n         */\n\n    }, {\n        key: 'mod',\n        value: function mod(n, m) {\n            return (n % m + m) % m;\n        }\n    }, {\n        key: 'version',\n        get: function get() {\n            return version;\n        }\n    }]);\n\n    return BaseGauge;\n}(EventEmitter);\n\n/**\r\n * @ignore\r\n * @typedef {object} ns\r\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['BaseGauge'] = BaseGauge;\n    ns['gauges'] = (window.document || {})['gauges'] = gauges;\n}\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\n/**\r\n * @access private\r\n * @typedef {CanvasRenderingContext2D | {\r\n *   max: number,\r\n *   maxRadius: number,\r\n *   barDimensions: object,\r\n * }} Canvas2DContext\r\n */\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Examines if a given error is something to throw or to ignore\r\n *\r\n * @param {Error} err\r\n */\nfunction verifyError(err) {\n    // there is some unpredictable error in FF in some circumstances\n    // which we found simply safe to ignore than to fight with it\n    // noinspection JSUnresolvedVariable\n    if (err instanceof DOMException && err.result === 0x8053000b) {\n        return; // ignore it\n    }\n\n    throw err;\n}\n\nvar validMember = /{([_a-zA-Z]+[_a-zA-Z0-9]*)}/g;\n\n/**\r\n * Format string unit string format using option members\r\n * Format option to set the “units” attribute.\r\n * For example “{value} % {title}” which replaces the attributes inside {} to\r\n * the same member in the option object.\r\n * So if title is set to “Hour” and value to “50” the units will be “50% Hour”.\r\n *\r\n * @param {GenericOptions|any} options\r\n * @param {string} format\r\n * @return {string}\r\n */\nfunction formatContext(options, format) {\n    // \"{value} % {Title}\"\n\n    return format.replace(validMember, function (match, member) {\n        var value = options[member];\n        return typeof value !== 'undefined' ? value : match;\n    });\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Auto-select major ticks using log-based preferred number series.\r\n *\r\n * @access private\r\n * @param {GenericOptions} options\r\n * @return {number[]}\r\n */\nfunction tickSelectAutoLog(options) {\n    var approxCount = options.majorTicksApproxCount || 10;\n    var round = options.majorTicksRound || 'in';\n    var base = options.majorTicksBase || 10;\n    var values = options.majorTicksNumbers || [1, 2, 5];\n    var minorRatio = typeof options.majorTicksMinorRatio === 'number' ? options.majorTicksMinorRatio : 5;\n\n    var approxDelta = (options.maxValue - options.minValue) / approxCount;\n    var magnitude = Math.pow(base, Math.floor(Math.log(approxDelta) / Math.log(base)));\n    var approxMantissa = approxDelta / magnitude;\n\n    var mantissa = base;\n    for (var i = 0; i < values.length; ++i) {\n        var threshold = Math.sqrt(values[i] * (values[i + 1] || base));\n        if (approxMantissa < threshold) {\n            mantissa = values[i];\n            break;\n        }\n    }\n    var delta = magnitude * mantissa;\n\n    var ticks = [];\n    var tick = Math.ceil(options.minValue / delta) * delta;\n    while (tick <= options.maxValue) {\n        ticks.push(tick);\n        tick += delta;\n    }\n\n    if (round === 'out') {\n        if (ticks[0] > options.minValue) {\n            ticks.unshift(ticks[0] - delta);\n            options.minValue = ticks[0];\n        }\n        if (ticks[ticks.length - 1] < options.maxValue) {\n            ticks.push(ticks[ticks.length - 1] + delta);\n            options.maxValue = ticks[ticks.length - 1];\n        }\n    } else if (round === 'ends') {\n        if (ticks[0] > options.minValue) {\n            ticks.unshift(options.minValue);\n        }\n        if (ticks[ticks.length - 1] < options.maxValue) {\n            ticks.push(options.maxValue);\n        }\n    }\n\n    options.majorTicks = ticks;\n\n    if (minorRatio) {\n        options.minorTicks = delta / minorRatio;\n    }\n}\n\nvar tickSelectors = {\n    autoLog: tickSelectAutoLog\n};\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Prepares major ticks data\r\n *\r\n * @access private\r\n * @param {GenericOptions|{ tickSide: string }} options\r\n * @return {[boolean, boolean]}\r\n */\nfunction prepareTicks(options) {\n    if (typeof options.exactTicks === 'function') {\n        options.exactTicks(options);\n    } else if (tickSelectors[options.exactTicks]) {\n        tickSelectors[options.exactTicks](options);\n    }\n\n    if (!(options.majorTicks instanceof Array)) {\n        options.majorTicks = options.majorTicks ? [options.majorTicks] : [];\n    }\n\n    if (!options.majorTicks.length) {\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.minValue, options));\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.maxValue, options));\n    }\n\n    return [options.tickSide !== 'right', options.tickSide !== 'left'];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws rounded corners rectangle\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n * @param {number} r\r\n */\nfunction roundRect(context, x, y, w, h, r) {\n    context.beginPath();\n\n    context.moveTo(x + r, y);\n    context.lineTo(x + w - r, y);\n\n    context.quadraticCurveTo(x + w, y, x + w, y + r);\n    context.lineTo(x + w, y + h - r);\n\n    context.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    context.lineTo(x + r, y + h);\n\n    context.quadraticCurveTo(x, y + h, x, y + h - r);\n    context.lineTo(x, y + r);\n\n    context.quadraticCurveTo(x, y, x + r, y);\n\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Pads a given value with leading zeros using the given options\r\n *\r\n * @param {number} val\r\n * @param {RadialGaugeOptions|{valueInt: number, valueDec: number}} options\r\n * @returns {string}\r\n */\nfunction padValue(val, options) {\n    var dec = options.valueDec;\n    var int = options.valueInt;\n    var i = 0;\n    var s = void 0,\n        strVal = void 0,\n        n = void 0;\n\n    val = parseFloat(val);\n    n = val < 0;\n    val = Math.abs(val);\n\n    if (dec > 0) {\n        strVal = val.toFixed(dec).toString().split('.');\n        s = int - strVal[0].length;\n\n        for (; i < s; ++i) {\n            strVal[0] = '0' + strVal[0];\n        }\n\n        strVal = (n ? '-' : '') + strVal[0] + '.' + strVal[1];\n    } else {\n        strVal = Math.round(val).toString();\n        s = int - strVal.length;\n\n        for (; i < s; ++i) {\n            strVal = '0' + strVal;\n        }\n\n        strVal = (n ? '-' : '') + strVal;\n    }\n\n    return strVal;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Formats a number for display on the dial's plate using the majorTicksFormat\r\n * config option.\r\n *\r\n * @param {number} num number to format\r\n * @param {object} options\r\n * @returns {string} formatted number\r\n */\nfunction formatMajorTickNumber(num, options) {\n    var right = void 0,\n        hasDec = false;\n\n    // First, force the correct number of digits right of the decimal.\n    if (options.majorTicksDec === 0) {\n        right = Math.round(num).toString();\n    } else {\n        right = num.toFixed(options.majorTicksDec);\n    }\n\n    // Second, force the correct number of digits left of the decimal.\n    if (options.majorTicksInt > 1) {\n        // Does this number have a decimal?\n        hasDec = ~right.indexOf('.');\n\n        // Is this number a negative number?\n        if (~right.indexOf('-')) {\n            return '-' + [options.majorTicksInt + options.majorTicksDec + 2 + (hasDec ? 1 : 0) - right.length].join('0') + right.replace('-', '');\n        } else {\n            return [options.majorTicksInt + options.majorTicksDec + 1 + (hasDec ? 1 : 0) - right.length].join('0') + right;\n        }\n    }\n\n    return right;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Transforms degrees to radians\r\n *\r\n * @param {number} degrees\r\n * @returns {number}\r\n */\nfunction radians(degrees) {\n    return degrees * Math.PI / 180;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Calculates and returns radial point coordinates\r\n *\r\n * @param {number} radius\r\n * @param {number} angle\r\n * @returns {{x: number, y: number}}\r\n */\nfunction radialPoint(radius, angle) {\n    return { x: -radius * Math.sin(angle), y: radius * Math.cos(angle) };\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Creates and returns linear gradient canvas object\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {string} colorFrom\r\n * @param {string} colorTo\r\n * @param {number} length\r\n * @param {boolean} [isVertical]\r\n * @param {number} [from]\r\n * @returns {CanvasGradient}\r\n */\nfunction linearGradient(context, colorFrom, colorTo, length) {\n    var isVertical = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    var from = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    var grad = context.createLinearGradient(isVertical ? 0 : from, isVertical ? from : 0, isVertical ? 0 : length, isVertical ? length : 0);\n\n    grad.addColorStop(0, colorFrom);\n    grad.addColorStop(1, colorTo);\n\n    return grad;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws the shadow if it was not drawn\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {GenericOptions} options\r\n * @param {boolean} shadowDrawn\r\n * @return {boolean}\r\n */\nfunction drawShadow(context, options) {\n    var shadowDrawn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (shadowDrawn) {\n        context.restore();\n        return true;\n    }\n\n    context.save();\n\n    var w = options.borderShadowWidth;\n\n    if (w) {\n        context.shadowBlur = w;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    return true;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge needle shadow\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawNeedleShadow(context, options) {\n    if (!options.needleShadow) return;\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 10;\n    context.shadowColor = options.colorNeedleShadowDown;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Constructs font styles for canvas fonts\r\n *\r\n * @param {GenericOptions} options\r\n * @param {string} target\r\n * @param {number} baseSize\r\n */\nfunction font(options, target, baseSize) {\n    return options['font' + target + 'Style'] + ' ' + options['font' + target + 'Weight'] + ' ' + options['font' + target + 'Size'] * baseSize + 'px ' + options['font' + target];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Resets some context settings\r\n *\r\n * @param {Canvas2DContext} context\r\n */\nfunction reset(context) {\n    context.shadowOffsetX = null;\n    context.shadowOffsetY = null;\n    context.shadowBlur = null;\n    context.shadowColor = '';\n    context.strokeStyle = null;\n    context.lineWidth = 0;\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Declares to drow value text shadow if configured\r\n *\r\n * @param context\r\n * @param options\r\n * @param offset\r\n * @param blur\r\n */\nfunction drawValueTextShadow(context, options, offset, blur) {\n    if (options.valueTextShadow) {\n        context.shadowOffsetX = offset;\n        context.shadowOffsetY = offset;\n        context.shadowBlur = blur;\n        context.shadowColor = options.colorValueTextShadow;\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws value box at given position\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {GenericOptions} options\r\n * @param {number|string} value\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} max\r\n */\nfunction drawValueBox(context, options, value, x, y, max) {\n    if (!options.valueBox) return;\n\n    reset(context);\n\n    var addLength = options.valueDec ? 1 + options.valueDec : 0;\n    var maxValueWidth = '9'.repeat(Math.max.apply(null, [String(parseInt(value)).length + addLength].concat(options.majorTicks.map(function (val) {\n        return String(parseInt(val, 10)).length + addLength;\n    }))));\n    var text = options.valueText || padValue(value, options);\n    var tunit = max / 200;\n    var runit = max / 100;\n    var offset = 0.4 * runit;\n    var blur = 1.2 * runit;\n\n    context.font = font(options, 'Value', tunit);\n    drawValueTextShadow(context, options, offset, blur);\n\n    var tw = context.measureText(options.valueText ? text : '-' + padValue(Number(maxValueWidth), options)).width;\n\n    reset(context);\n\n    var th = parseFloat(options.fontValueSize) * tunit + offset + blur;\n    var sw = runit * parseFloat(options.valueBoxStroke);\n    var bmax = max * 2 - sw * 2;\n\n    var bw = tw + 10 * runit;\n    var bh = 1.1 * th + offset + blur;\n    var br = runit * options.valueBoxBorderRadius;\n    var obw = (parseFloat(options.valueBoxWidth) || 0) / 100 * bmax;\n\n    obw > bw && (bw = obw);\n    bw > bmax && (bw = bmax);\n\n    var bx = x - bw / 2;\n    var by = y - bh / 2;\n    var gy = y - 5.75 * runit;\n\n    context.beginPath();\n\n    if (br) roundRect(context, bx, by, bw, bh, br);else context.rect(bx, by, bw, bh);\n\n    if (sw) {\n        var grd = context.createRadialGradient(x, gy, runit * 10, x, gy, runit * 20);\n\n        grd.addColorStop(0, options.colorValueBoxRect);\n        grd.addColorStop(1, options.colorValueBoxRectEnd);\n\n        context.strokeStyle = grd;\n        context.lineWidth = sw;\n        context.stroke();\n    }\n\n    if (options.colorValueBoxShadow) {\n        context.shadowBlur = 1.2 * runit;\n        context.shadowColor = options.colorValueBoxShadow;\n    }\n\n    if (options.colorValueBoxBackground) {\n        context.fillStyle = options.colorValueBoxBackground;\n        context.fill();\n    }\n\n    context.closePath();\n    context.restore();\n\n    drawValueTextShadow(context, options, offset, blur);\n\n    context.fillStyle = options.colorValueText;\n    context.textAlign = 'center';\n    context.textBaseline = 'alphabetic';\n    context.fillText(text, bx + bw / 2, y + bh / 2 - th / 3);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Returns normalized value\r\n *\r\n * @param {GenericOptions} options\r\n * @return {{normal: number, indented: number}}\r\n */\nfunction normalizedValue(options) {\n    var value = options.value;\n    var min = options.minValue;\n    var max = options.maxValue;\n    var dt = (max - min) * options.needleClampFrac;\n    var indMin = options.needleClampSnap ? min : min - dt;\n    var indMax = options.needleClampSnap ? max : max + dt;\n\n    return {\n        normal: value < min ? min : value > max ? max : value,\n        indented: value < indMin ? min - dt : value > indMax ? max + dt : value\n    };\n}\n\nvar drawings = {\n    roundRect: roundRect,\n    padValue: padValue,\n    formatMajorTickNumber: formatMajorTickNumber,\n    radians: radians,\n    radialPoint: radialPoint,\n    linearGradient: linearGradient,\n    drawNeedleShadow: drawNeedleShadow,\n    drawValueBox: drawValueBox,\n    verifyError: verifyError,\n    prepareTicks: prepareTicks,\n    drawShadow: drawShadow,\n    font: font,\n    normalizedValue: normalizedValue,\n    formatContext: formatContext\n};\n\ndrawings;\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\nvar PI = Math.PI;\nvar HPI = PI / 2;\n\n/**\r\n * Gauge configuration options\r\n *\r\n * @typedef {GenericOptions | {\r\n *   exactTicks: boolean,\r\n *   ticksAngle: number,\r\n *   startAngle: number,\r\n *   colorNeedleCircleOuter: string,\r\n *   colorNeedleCircleOuterEnd: string,\r\n *   colorNeedleCircleInner: string,\r\n *   colorNeedleCircleInnerEnd: string,\r\n *   needleCircleSize: number,\r\n *   needleCircleInner: boolean,\r\n *   needleCircleOuter: boolean,\r\n *   animationTarget: string,\r\n *   useMinPath: boolean,\r\n *   barStartPosition: 'right' | 'left',\r\n * }} RadialGaugeOptions\r\n */\n\n/**\r\n * Default gauge configuration options\r\n *\r\n * @access private\r\n * @type {RadialGaugeOptions}\r\n */\nvar defaultRadialGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    ticksAngle: 270,\n    startAngle: 45,\n\n    // colors\n    colorNeedleCircleOuter: '#f0f0f0',\n    colorNeedleCircleOuterEnd: '#ccc',\n    colorNeedleCircleInner: '#e8e8e8',\n    colorNeedleCircleInnerEnd: '#f5f5f5',\n\n    // needle\n    needleCircleSize: 10,\n    needleCircleInner: true,\n    needleCircleOuter: true,\n    needleStart: 20,\n\n    // custom animations\n    animationTarget: 'needle', // 'needle' or 'plate'\n    useMinPath: false,\n\n    barWidth: 0,\n    barStartPosition: 'left'\n});\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gradient-filled circle on a canvas\r\n *\r\n * @access private\r\n * @param {number} radius\r\n * @param {number} width\r\n * @param {Canvas2DContext} context\r\n * @param {string} start gradient start color\r\n * @param {string} end gradient end color\r\n */\nfunction drawRadialBorder(radius, width, context, start, end) {\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(radius), 0, PI * 2, true);\n    context.lineWidth = width;\n    context.strokeStyle = end ? drawings.linearGradient(context, start, end, radius) : start;\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Returns max radius without borders for the gauge\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n * @return {number}\r\n */\nfunction maxRadialRadius(context, options) {\n    var pxRatio = SmartCanvas.pixelRatio;\n\n    if (!context.maxRadius) {\n        context.maxRadius = context.max - options.borderShadowWidth - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio + (options.borderOuterWidth ? 0.5 : 0) + (options.borderMiddleWidth ? 0.5 : 0) + (options.borderInnerWidth ? 0.5 : 0);\n    }\n\n    return context.maxRadius;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge plate on the canvas\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialPlate(context, options) {\n    var pxRatio = SmartCanvas.pixelRatio;\n    var d0 = options.borderShadowWidth * pxRatio;\n    var r0 = context.max - d0 - options.borderOuterWidth * pxRatio / 2;\n    var r1 = r0 - options.borderOuterWidth * pxRatio / 2 - options.borderMiddleWidth * pxRatio / 2 + 0.5;\n    var r2 = r1 - options.borderMiddleWidth * pxRatio / 2 - options.borderInnerWidth * pxRatio / 2 + 0.5;\n    var r3 = maxRadialRadius(context, options);\n    var grad = void 0;\n    var shadowDrawn = false;\n\n    context.save();\n\n    if (options.borderOuterWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r0, options.borderOuterWidth * pxRatio, context, options.colorBorderOuter, options.colorBorderOuterEnd);\n    }\n\n    if (options.borderMiddleWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r1, options.borderMiddleWidth * pxRatio, context, options.colorBorderMiddle, options.colorBorderMiddleEnd);\n    }\n\n    if (options.borderInnerWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r2, options.borderInnerWidth * pxRatio, context, options.colorBorderInner, options.colorBorderInnerEnd);\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(r3), 0, PI * 2, true);\n\n    if (options.colorPlateEnd) {\n        grad = context.createRadialGradient(0, 0, r3 / 2, 0, 0, r3);\n        grad.addColorStop(0, options.colorPlate);\n        grad.addColorStop(1, options.colorPlateEnd);\n    } else {\n        grad = options.colorPlate;\n    }\n\n    context.fillStyle = grad;\n\n    context.fill();\n    context.closePath();\n\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge highlight areas on a canvas\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialHighlights(context, options) {\n    var hlWidth = context.max * (parseFloat(options.highlightsWidth) || 0) / 100;\n\n    if (!hlWidth) return;\n\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options) - hlWidth / 2);\n    var i = 0,\n        s = options.highlights.length;\n    var vd = (options.maxValue - options.minValue) / options.ticksAngle;\n\n    context.save();\n\n    for (; i < s; i++) {\n        var hlt = options.highlights[i];\n\n        context.beginPath();\n\n        context.rotate(HPI);\n        context.arc(0, 0, r, drawings.radians(options.startAngle + (hlt.from - options.minValue) / vd), drawings.radians(options.startAngle + (hlt.to - options.minValue) / vd), false);\n        context.strokeStyle = hlt.color;\n        context.lineWidth = hlWidth;\n        context.lineCap = options.highlightsLineCap;\n        context.stroke();\n        context.closePath();\n\n        context.restore();\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws minor ticks bar on a canvas\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialMinorTicks(context, options) {\n    drawings.prepareTicks(options);\n\n    var radius = radialTicksRadius(context, options);\n    var s = void 0,\n        range = void 0,\n        angle = void 0;\n    var i = 0;\n    var delta = 0;\n    var minTicks = Math.abs(options.minorTicks) || 0;\n    var ratio = options.ticksAngle / (options.maxValue - options.minValue);\n\n    context.lineWidth = SmartCanvas.pixelRatio;\n    context.strokeStyle = options.colorMinorTicks || options.colorStrokeTicks;\n\n    context.save();\n\n    if (options.exactTicks) {\n        range = options.maxValue - options.minValue;\n        s = minTicks ? range / minTicks : 0;\n        delta = (BaseGauge.mod(options.majorTicks[0], minTicks) || 0) * ratio;\n    } else {\n        s = minTicks * (options.majorTicks.length - 1);\n    }\n\n    for (; i < s; ++i) {\n        angle = options.startAngle + delta + i * (options.ticksAngle / s);\n        if (angle <= options.ticksAngle + options.startAngle) {\n            context.rotate(drawings.radians(angle));\n\n            context.beginPath();\n            context.moveTo(0, radius);\n            context.lineTo(0, radius - context.max * 0.075);\n            closeStrokedPath(context);\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Returns ticks radius\r\n *\r\n * @access private\r\n * @param context\r\n * @param options\r\n * @return {number}\r\n */\nfunction radialTicksRadius(context, options) {\n    var unit = context.max / 100;\n\n    return maxRadialRadius(context, options) - 5 * unit - (options.barWidth ? (parseFloat(options.barStrokeWidth) || 0) * 2 + ((parseFloat(options.barWidth) || 0) + 5) * unit : 0);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge major ticks bar on a canvas\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialMajorTicks(context, options) {\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options));\n    var i = void 0,\n        colors = void 0;\n    var s = options.majorTicks.length;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    context.lineWidth = 2 * pixelRatio;\n    context.save();\n\n    colors = options.colorMajorTicks instanceof Array ? options.colorMajorTicks : new Array(s).fill(options.colorStrokeTicks || options.colorMajorTicks);\n\n    i = 0;\n    for (; i < s; ++i) {\n        context.strokeStyle = colors[i];\n        context.rotate(drawings.radians(radialNextAngle(options, options.exactTicks ? options.majorTicks[i] : i, s)));\n\n        context.beginPath();\n        context.moveTo(0, r);\n        context.lineTo(0, r - context.max * 0.15);\n        closeStrokedPath(context);\n    }\n\n    if (options.strokeTicks) {\n        context.strokeStyle = options.colorStrokeTicks || colors[0];\n        context.rotate(HPI);\n\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n        closeStrokedPath(context);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\nfunction radialNextAngle(options, i, s) {\n    if (options.exactTicks) {\n        var ratio = options.ticksAngle / (options.maxValue - options.minValue);\n        return options.startAngle + ratio * (i - options.minValue);\n    }\n\n    return options.startAngle + i * (options.ticksAngle / (s - 1));\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Strokes, closes path and restores previous context state\r\n *\r\n * @param {Canvas2DContext} context\r\n */\nfunction closeStrokedPath(context) {\n    context.stroke();\n    context.restore();\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge bar numbers\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialNumbers(context, options) {\n    var radius = radialTicksRadius(context, options) - context.max * 0.15;\n    var points = {};\n    var i = 0;\n    var s = options.majorTicks.length;\n    var isAnimated = options.animationTarget !== 'needle';\n    var colors = options.colorNumbers instanceof Array ? options.colorNumbers : new Array(s).fill(options.colorNumbers);\n\n    var plateValueAngle = isAnimated ? -(options.value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle : 0;\n\n    if (isAnimated) {\n        context.save();\n        context.rotate(-drawings.radians(plateValueAngle));\n    }\n\n    context.font = drawings.font(options, 'Numbers', context.max / 200);\n    context.lineWidth = 0;\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    for (; i < s; ++i) {\n        var angle = plateValueAngle + radialNextAngle(options, options.exactTicks ? options.majorTicks[i] : i, s);\n        var textWidth = context.measureText(options.majorTicks[i]).width;\n        var textHeight = options.fontNumbersSize;\n        var textRadius = Math.sqrt(textWidth * textWidth + textHeight * textHeight) / 2;\n        var point = drawings.radialPoint(radius - textRadius - options.numbersMargin / 100 * context.max, drawings.radians(angle));\n\n        if (angle === 360) angle = 0;\n\n        if (points[angle]) {\n            continue; //already drawn at this place, skipping\n        }\n\n        points[angle] = true;\n\n        context.fillStyle = colors[i];\n        context.fillText(options.majorTicks[i], point.x, point.y);\n    }\n\n    isAnimated && context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge title\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialTitle(context, options) {\n    if (!options.title) return;\n\n    context.save();\n    context.font = drawings.font(options, 'Title', context.max / 200);\n    context.fillStyle = options.colorTitle;\n    context.textAlign = 'center';\n    context.fillText(options.title, 0, -context.max / 4.25, context.max * 0.8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws units name on the gauge\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialUnits(context, options) {\n    if (!options.units) return;\n\n    context.save();\n    context.font = drawings.font(options, 'Units', context.max / 200);\n    context.fillStyle = options.colorUnits;\n    context.textAlign = 'center';\n    context.fillText(drawings.formatContext(options, options.units), 0, context.max / 3.25, context.max * 0.8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge needle\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialNeedle(context, options) {\n    if (!options.needle) return;\n\n    var value = options.ticksAngle < 360 ? drawings.normalizedValue(options).indented : options.value;\n    var startAngle = isFixed ? options.startAngle : options.startAngle + (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle;\n    if (options.barStartPosition === 'right') {\n        startAngle = options.startAngle + options.ticksAngle - (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle;\n    }\n    var max = maxRadialRadius(context, options);\n    //noinspection JSUnresolvedFunction\n    var r1 = abs(max / 100 * options.needleCircleSize);\n    //noinspection JSUnresolvedFunction\n    var r2 = abs(max / 100 * options.needleCircleSize * 0.75);\n    //noinspection JSUnresolvedFunction\n    var rIn = abs(max / 100 * options.needleEnd);\n    //noinspection JSUnresolvedFunction\n    var rStart = abs(options.needleStart ? max / 100 * options.needleStart : 0);\n    //noinspection JSUnresolvedFunction\n    var pad1 = max / 100 * options.needleWidth;\n    var pad2 = max / 100 * options.needleWidth / 2;\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isFixed = options.animationTarget !== 'needle';\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    context.rotate(drawings.radians(startAngle));\n\n    context.fillStyle = drawings.linearGradient(context, options.colorNeedle, options.colorNeedleEnd, rIn - rStart);\n\n    if (options.needleType === 'arrow') {\n        context.beginPath();\n        context.moveTo(-pad2, -rStart);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(pixelRatio, rIn);\n        context.lineTo(pad1, 0);\n        context.lineTo(pad2, -rStart);\n        context.closePath();\n        context.fill();\n\n        context.beginPath();\n        context.lineTo(-0.5 * pixelRatio, rIn);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-pad2, -rStart);\n        context.lineTo(pad2 / 2 * pixelRatio - 2 * pixelRatio, -rStart);\n        context.closePath();\n        context.fillStyle = options.colorNeedleShadowUp;\n        context.fill();\n    } else {\n        // simple line needle\n        context.beginPath();\n        context.moveTo(-pad2, rIn);\n        context.lineTo(-pad2, rStart);\n        context.lineTo(pad2, rStart);\n        context.lineTo(pad2, rIn);\n        context.closePath();\n        context.fill();\n    }\n\n    if (options.needleCircleSize) {\n        context.restore();\n\n        drawings.drawNeedleShadow(context, options);\n\n        if (options.needleCircleOuter) {\n            context.beginPath();\n            context.arc(0, 0, r1, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleOuter, options.colorNeedleCircleOuterEnd, r1);\n            context.fill();\n            context.closePath();\n        }\n\n        if (options.needleCircleInner) {\n            context.beginPath();\n            context.arc(0, 0, r2, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleInner, options.colorNeedleCircleInnerEnd, r2);\n            context.fill();\n            context.closePath();\n        }\n\n        context.restore();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge value box\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n * @param {number} value\r\n */\nfunction drawRadialValueBox(context, options, value) {\n    drawings.drawValueBox(context, options, value, 0, context.max - context.max * 0.33, context.max);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Computes start and end angle depending on barStartPositionOption\r\n *\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction computeAngles(options) {\n    var sa = options.startAngle;\n    var ea = options.startAngle + options.ticksAngle;\n    var value = drawings.normalizedValue(options)[options.clampProgressNeedle ? 'indented' : 'normal'];\n    var startAngle = sa;\n    var endAngle = sa + (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle;\n    if (options.barStartPosition === 'middle') {\n        var midValue = (options.minValue + options.maxValue) * 0.5;\n        if (options.value < midValue) {\n            startAngle = 180 - (midValue - value) / (options.maxValue - options.minValue) * options.ticksAngle;\n            endAngle = 180;\n        } else {\n            startAngle = 180;\n            endAngle = 180 + (value - midValue) / (options.maxValue - options.minValue) * options.ticksAngle;\n        }\n    } else if (options.barStartPosition === 'right') {\n        startAngle = ea - endAngle + sa;\n        endAngle = ea;\n    }\n    return { startAngle: startAngle, endAngle: endAngle };\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge progress bar\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {RadialGaugeOptions} options\r\n */\nfunction drawRadialProgressBar(context, options) {\n    var unit = context.max / 100;\n    var rMax = maxRadialRadius(context, options) - 5 * unit;\n    var sw = parseFloat(options.barStrokeWidth + '') || 0;\n    var w = (parseFloat(options.barWidth + '') || 0) * unit;\n    var rMin = rMax - sw * 2 - w;\n    var half = (rMax - rMin) / 2;\n    var r = rMin + half;\n    var delta = sw / r;\n    var sa = options.startAngle;\n    var ea = options.startAngle + options.ticksAngle;\n\n    context.save();\n    context.rotate(HPI);\n\n    if (sw) {\n        // draw stroke\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(sa) - delta, drawings.radians(ea) + delta, false);\n        context.strokeStyle = options.colorBarStroke;\n        context.lineWidth = half * 2;\n        context.stroke();\n        context.closePath();\n    }\n\n    if (w) {\n        // draw bar\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(sa), drawings.radians(ea), false);\n        context.strokeStyle = options.colorBar;\n        context.lineWidth = w;\n        context.stroke();\n        context.closePath();\n\n        if (options.barShadow) {\n            // draw shadow\n            context.beginPath();\n            context.arc(0, 0, rMax, drawings.radians(sa), drawings.radians(ea), false);\n            context.clip();\n\n            context.beginPath();\n            context.strokeStyle = options.colorBar;\n            context.lineWidth = 1;\n            context.shadowBlur = options.barShadow;\n            context.shadowColor = options.colorBarShadow;\n            context.shadowOffsetX = 0;\n            context.shadowOffsetY = 0;\n            context.arc(0, 0, rMax, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n            context.stroke();\n            context.closePath();\n\n            context.restore();\n            context.rotate(HPI);\n        }\n\n        // draw bar progress\n        if (options.barProgress) {\n            var angles = computeAngles(options);\n            var startAngle = angles.startAngle;\n            var endAngle = angles.endAngle;\n\n            context.beginPath();\n            context.arc(0, 0, r, drawings.radians(startAngle), drawings.radians(endAngle), false);\n            context.strokeStyle = options.colorBarProgress;\n            context.lineWidth = w;\n            context.stroke();\n            context.closePath();\n        }\n    }\n\n    context.restore();\n}\n\n/**\r\n * Find and return gauge value to display\r\n *\r\n * @param {RadialGauge} gauge\r\n */\nfunction displayValue(gauge) {\n    if (gauge.options.animatedValue) {\n        return gauge.options.value;\n    }\n\n    return gauge.value;\n}\n\n/**\r\n * Minimalistic HTML5 Canvas Gauge\r\n * @example\r\n *  var gauge = new RadialGauge({\r\n *     renderTo: 'gauge-id', // identifier of HTML canvas element or element itself\r\n *     width: 400,\r\n *     height: 400,\r\n *     units: 'Km/h',\r\n *     title: false,\r\n *     value: 0,\r\n *     minValue: 0,\r\n *     maxValue: 220,\r\n *     majorTicks: [\r\n *         '0','20','40','60','80','100','120','140','160','180','200','220'\r\n *     ],\r\n *     minorTicks: 2,\r\n *     strokeTicks: false,\r\n *     highlights: [\r\n *         { from: 0, to: 50, color: 'rgba(0,255,0,.15)' },\r\n *         { from: 50, to: 100, color: 'rgba(255,255,0,.15)' },\r\n *         { from: 100, to: 150, color: 'rgba(255,30,0,.25)' },\r\n *         { from: 150, to: 200, color: 'rgba(255,0,225,.25)' },\r\n *         { from: 200, to: 220, color: 'rgba(0,0,255,.25)' }\r\n *     ],\r\n *     colorPlate: '#222',\r\n *     colorMajorTicks: '#f5f5f5',\r\n *     colorMinorTicks: '#ddd',\r\n *     colorTitle: '#fff',\r\n *     colorUnits: '#ccc',\r\n *     colorNumbers: '#eee',\r\n *     colorNeedleStart: 'rgba(240, 128, 128, 1)',\r\n *     colorNeedleEnd: 'rgba(255, 160, 122, .9)',\r\n *     valueBox: true,\r\n *     animationRule: 'bounce'\r\n * });\r\n * // draw initially\r\n * gauge.draw();\r\n * // animate\r\n * setInterval(() => {\r\n *    gauge.value = Math.random() * -220 + 220;\r\n * }, 1000);\r\n */\n\nvar RadialGauge = function (_BaseGauge) {\n    _inherits(RadialGauge, _BaseGauge);\n\n    /**\r\n     * Fired each time before gauge plate is drawn\r\n     *\r\n     * @event RadialGauge#beforePlate\r\n     */\n\n    /**\r\n     * Fired each time before gauge highlight areas are drawn\r\n     *\r\n     * @event RadialGauge#beforeHighlights\r\n     */\n\n    /**\r\n     * Fired each time before gauge minor ticks are drawn\r\n     *\r\n     * @event RadialGauge#beforeMinorTicks\r\n     */\n\n    /**\r\n     * Fired each time before gauge major ticks are drawn\r\n     *\r\n     * @event RadialGauge#beforeMajorTicks\r\n     */\n\n    /**\r\n     * Fired each time before gauge tick numbers are drawn\r\n     *\r\n     * @event RadialGauge#beforeNumbers\r\n     */\n\n    /**\r\n     * Fired each time before gauge title is drawn\r\n     *\r\n     * @event RadialGauge#beforeTitle\r\n     */\n\n    /**\r\n     * Fired each time before gauge units text is drawn\r\n     *\r\n     * @event RadialGauge#beforeUnits\r\n     */\n\n    /**\r\n     * Fired each time before gauge progress bar is drawn\r\n     *\r\n     * @event RadialGauge#beforeProgressBar\r\n     */\n\n    /**\r\n     * Fired each time before gauge value box is drawn\r\n     *\r\n     * @event RadialGauge#beforeValueBox\r\n     */\n\n    /**\r\n     * Fired each time before gauge needle is drawn\r\n     *\r\n     * @event RadialGauge#beforeNeedle\r\n     */\n\n    /**\r\n     * @constructor\r\n     * @param {RadialGaugeOptions} options\r\n     */\n    function RadialGauge(options) {\n        _classCallCheck(this, RadialGauge);\n\n        options = Object.assign({}, defaultRadialGaugeOptions, options || {});\n        return _possibleConstructorReturn(this, (RadialGauge.__proto__ || Object.getPrototypeOf(RadialGauge)).call(this, RadialGauge.configure(options)));\n    }\n\n    /**\r\n     * Checks and updates gauge options properly\r\n     *\r\n     * @param {*} options\r\n     * @return {*}\r\n     * @access protected\r\n     */\n\n\n    _createClass(RadialGauge, [{\n        key: 'draw',\n\n\n        /**\r\n         * Triggering gauge render on a canvas.\r\n         *\r\n         * @returns {RadialGauge}\r\n         */\n        value: function draw() {\n            try {\n                var canvas = this.canvas;\n                var _ref = [-canvas.drawX, -canvas.drawY, canvas.drawWidth, canvas.drawHeight],\n                    x = _ref[0],\n                    y = _ref[1],\n                    w = _ref[2],\n                    h = _ref[3];\n\n                var options = this.options;\n\n                if (options.animationTarget === 'needle') {\n                    if (!canvas.elementClone.initialized) {\n                        var context = canvas.contextClone;\n\n                        // clear the cache\n                        context.clearRect(x, y, w, h);\n                        context.save();\n\n                        this.emit('beforePlate');\n                        drawRadialPlate(context, options);\n                        this.emit('beforeHighlights');\n                        drawRadialHighlights(context, options);\n                        this.emit('beforeMinorTicks');\n                        drawRadialMinorTicks(context, options);\n                        this.emit('beforeMajorTicks');\n                        drawRadialMajorTicks(context, options);\n                        this.emit('beforeNumbers');\n                        drawRadialNumbers(context, options);\n                        this.emit('beforeTitle');\n                        drawRadialTitle(context, options);\n                        this.emit('beforeUnits');\n                        drawRadialUnits(context, options);\n\n                        canvas.elementClone.initialized = true;\n                    }\n\n                    this.canvas.commit();\n\n                    // clear the canvas\n                    canvas.context.clearRect(x, y, w, h);\n                    canvas.context.save();\n\n                    canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                    canvas.context.save();\n\n                    this.emit('beforeProgressBar');\n                    drawRadialProgressBar(canvas.context, options);\n                    this.emit('beforeValueBox');\n                    drawRadialValueBox(canvas.context, options, displayValue(this));\n                    this.emit('beforeNeedle');\n                    drawRadialNeedle(canvas.context, options);\n                } else {\n                    var plateValueAngle = -drawings.radians((options.value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle);\n\n                    // clear the canvas\n                    canvas.context.clearRect(x, y, w, h);\n                    canvas.context.save();\n\n                    this.emit('beforePlate');\n                    drawRadialPlate(canvas.context, options);\n\n                    canvas.context.rotate(plateValueAngle);\n\n                    // animated\n                    this.emit('beforeHighlights');\n                    drawRadialHighlights(canvas.context, options);\n                    this.emit('beforeMinorTicks');\n                    drawRadialMinorTicks(canvas.context, options);\n                    this.emit('beforeMajorTicks');\n                    drawRadialMajorTicks(canvas.context, options);\n                    this.emit('beforeNumbers');\n                    drawRadialNumbers(canvas.context, options);\n                    this.emit('beforeProgressBar');\n                    drawRadialProgressBar(canvas.context, options);\n\n                    // non-animated\n                    canvas.context.rotate(-plateValueAngle);\n                    canvas.context.save();\n\n                    if (!canvas.elementClone.initialized) {\n                        var _context = canvas.contextClone;\n\n                        // clear the cache\n                        _context.clearRect(x, y, w, h);\n                        _context.save();\n\n                        this.emit('beforeTitle');\n                        drawRadialTitle(_context, options);\n                        this.emit('beforeUnits');\n                        drawRadialUnits(_context, options);\n                        this.emit('beforeNeedle');\n                        drawRadialNeedle(_context, options);\n\n                        canvas.elementClone.initialized = true;\n                    }\n\n                    canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                }\n\n                // value box animations\n                this.emit('beforeValueBox');\n                drawRadialValueBox(canvas.context, options, displayValue(this));\n\n                _get(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'draw', this).call(this);\n            } catch (err) {\n                drawings.verifyError(err);\n            }\n\n            return this;\n        }\n    }, {\n        key: 'value',\n\n\n        /**\r\n         * Sets the value for radial gauge\r\n         *\r\n         * @param {number} value\r\n         */\n        set: function set(value) {\n            value = BaseGauge.ensureValue(value, this.options.minValue);\n\n            if (this.options.animation && this.options.ticksAngle === 360 && this.options.useMinPath) {\n                this._value = value;\n                value = this.options.value + ((value - this.options.value) % 360 + 540) % 360 - 180;\n            }\n\n            _set(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'value', value, this);\n        }\n\n        /**\r\n         * Returns current gauge value\r\n         *\r\n         * @return {number}\r\n         */\n        ,\n        get: function get() {\n            return _get(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'value', this);\n        }\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            if (options.barWidth > 50) options.barWidth = 50;\n\n            /* istanbul ignore if */\n            if (isNaN(options.startAngle)) options.startAngle = 45;\n            /* istanbul ignore if */\n            if (isNaN(options.ticksAngle)) options.ticksAngle = 270;\n\n            /* istanbul ignore if */\n            if (options.ticksAngle > 360) options.ticksAngle = 360;\n            /* istanbul ignore if */\n            if (options.ticksAngle < 0) options.ticksAngle = 0;\n\n            /* istanbul ignore if */\n            if (options.startAngle < 0) options.startAngle = 0;\n            /* istanbul ignore if */\n            if (options.startAngle > 360) options.startAngle = 360;\n\n            return options;\n        }\n    }]);\n\n    return RadialGauge;\n}(BaseGauge);\n\n/**\r\n * @ignore\r\n * @typedef {object} ns\r\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['RadialGauge'] = RadialGauge;\n}\n\nBaseGauge.initialize('RadialGauge', defaultRadialGaugeOptions);\n\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n\n/**\r\n * Linear gauge configuration options\r\n *\r\n * @typedef {GenericOptions|{borderRadius: number, barBeginCircle: number, tickSide: string, needleSide: string, numberSide: string, ticksWidth: number, ticksWidthMinor: number, ticksPadding: number, barLength: number, colorBarEnd: string, colorBarProgressEnd: string}} LinearGaugeOptions\r\n */\n\n/**\r\n * Default linear gauge configuration options\r\n *\r\n * @type {LinearGaugeOptions}\r\n */\nvar defaultLinearGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    borderRadius: 0,\n    // width: 150,\n    // height: 400,\n\n    // bar\n    barBeginCircle: 30, // percents\n    colorBarEnd: '',\n    colorBarProgressEnd: '',\n\n    needleWidth: 6,\n\n    tickSide: 'both', // available: 'left', 'right', 'both'\n    needleSide: 'both', // available: 'left', 'right', 'both'\n\n    numberSide: 'both', // available: 'left', 'right', 'both'\n\n    ticksWidth: 10,\n    ticksWidthMinor: 5,\n    ticksPadding: 5,\n    barLength: 85,\n    fontTitleSize: 26,\n\n    highlightsWidth: 10\n});\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws rectangle on a canvas\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\r\n * @param {number} x x-coordinate of the top-left corner\r\n * @param {number} y y-coordinate of the top-left corner\r\n * @param {number} w width of the rectangle\r\n * @param {number} h height of the rectangle\r\n * @param {string} colorStart base fill color of the rectangle\r\n * @param {string} [colorEnd] gradient color of the rectangle\r\n */\nfunction drawRectangle(context, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.fillStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, w > h ? w : h, h > w, w > h ? x : y) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws rectangle on a canvas\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {number} width width of the border\r\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\r\n * @param {number} x x-coordinate of the top-left corner\r\n * @param {number} y y-coordinate of the top-left corner\r\n * @param {number} w width of the rectangle\r\n * @param {number} h height of the rectangle\r\n * @param {string} colorStart base fill color of the rectangle\r\n * @param {string} [colorEnd] gradient color of the rectangle\r\n */\nfunction drawLinearBorder(context, width, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.lineWidth = width;\n    context.strokeStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, h, true, y) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws linear gauge plate\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n */\nfunction drawLinearPlate(context, options, x, y, w, h) {\n    var pxRatio = SmartCanvas.pixelRatio;\n    context.save();\n\n    var r = options.borderRadius * pxRatio;\n    var w1 = w - options.borderShadowWidth - options.borderOuterWidth * pxRatio;\n    var w2 = w1 - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio;\n    var w3 = w2 - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio;\n    var w4 = w3 - options.borderInnerWidth * pxRatio;\n\n    var h1 = h - options.borderShadowWidth - options.borderOuterWidth * pxRatio;\n    var h2 = h1 - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio;\n    var h3 = h2 - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio;\n    var h4 = h3 - options.borderInnerWidth * pxRatio;\n\n    var x2 = x - (w2 - w1) / 2;\n    var x3 = x2 - (w3 - w2) / 2;\n    var x4 = x3 - (w4 - w3) / 2;\n\n    var y2 = y - (h2 - h1) / 2;\n    var y3 = y2 - (h3 - h2) / 2;\n    var y4 = y3 - (h4 - h3) / 2;\n    var aliasingOffset = 0;\n    var shadowDrawn = false;\n\n    if (options.borderOuterWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderOuterWidth * pxRatio, r, x + options.borderOuterWidth * pxRatio / 2 - aliasingOffset, y + options.borderOuterWidth * pxRatio / 2 - aliasingOffset, w1, h1, options.colorBorderOuter, options.colorBorderOuterEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    if (options.borderMiddleWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderMiddleWidth * pxRatio, r -= 1 + aliasingOffset * 2, x2 + options.borderMiddleWidth * pxRatio / 2 - aliasingOffset, y2 + options.borderMiddleWidth * pxRatio / 2 - aliasingOffset, w2 + aliasingOffset * 2, h2 + aliasingOffset * 2, options.colorBorderMiddle, options.colorBorderMiddleEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    if (options.borderInnerWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderInnerWidth * pxRatio, r -= 1 + aliasingOffset * 2, x3 + options.borderInnerWidth * pxRatio / 2 - aliasingOffset, y3 + options.borderInnerWidth * pxRatio / 2 - aliasingOffset, w3 + aliasingOffset * 2, h3 + aliasingOffset * 2, options.colorBorderInner, options.colorBorderInnerEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    drawRectangle(context, r, x4, y4, w4 + aliasingOffset * 2, h4 + aliasingOffset * 2, options.colorPlate, options.colorPlateEnd);\n\n    context.restore();\n\n    return [x4, y4, w4, h4];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Calculates and returns linear gauge base bar dimensions.\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions|{barStrokeWidth: number, barBeginCircle: number, barWidth: number, hasLeft: boolean, hasRight: boolean}} options\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n * @return {{isVertical: boolean, width: number, length: number, barWidth: number, barLength: number, strokeWidth: number, barMargin: number, radius: number, x0: number, y0: number, barOffset: number, titleMargin: number, unitsMargin: number, X: number, Y: number, baseX: number, baseY: number, ticksPadding: number}}\r\n */\nfunction barDimensions(context, options, x, y, w, h) {\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isVertical = h >= w;\n    var width = isVertical ? w * 0.85 : h;\n    var length = isVertical ? h : w;\n\n    //noinspection JSUnresolvedFunction\n    x = isVertical ? round(x + (w - width) / 2) : x;\n\n    var hasTitle = !!options.title;\n    var hasUnits = !!options.units;\n    var hasValue = !!options.valueBox;\n\n    var titleMargin = void 0;\n    var unitsMargin = void 0;\n    var valueMargin = void 0;\n\n    if (isVertical) {\n        //noinspection JSUnresolvedFunction\n        unitsMargin = round(length * 0.05);\n        //noinspection JSUnresolvedFunction\n        titleMargin = round(length * 0.075);\n        //noinspection JSUnresolvedFunction\n        valueMargin = round(length * 0.11);\n\n        if (hasTitle) {\n            length -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) length -= unitsMargin;\n        if (hasValue) length -= valueMargin;\n    } else {\n        //noinspection JSUnresolvedFunction\n        unitsMargin = titleMargin = round(width * 0.15);\n\n        if (hasTitle) {\n            width -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) width -= unitsMargin;\n    }\n\n    var strokeWidth = options.barStrokeWidth * 2;\n    //noinspection JSUnresolvedFunction\n    var radius = options.barBeginCircle ? round(width * options.barBeginCircle / 200 - strokeWidth / 2) : 0;\n    //noinspection JSUnresolvedFunction\n    var barWidth = round(width * options.barWidth / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barLength = round(length * options.barLength / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barMargin = round((length - barLength) / 2);\n\n    // coordinates for arc of the bar if configured\n    //noinspection JSUnresolvedFunction\n    var x0 = round(x + (isVertical ? width / 2 : barMargin + radius));\n    //noinspection JSUnresolvedFunction\n    var y0 = round(y + (isVertical ? length - barMargin - radius + strokeWidth / 2 : width / 2));\n    var dx = isVertical && !(options.hasLeft && options.hasRight) ? (options.hasRight ? -1 : 1) * options.ticksWidth / 100 * width : 0;\n    var dy = !isVertical && !(options.hasLeft && options.hasRight) ? (options.hasRight ? -1 : 1) * options.ticksWidth / 100 * width : 0;\n\n    //noinspection JSUndefinedPropertyAssignment\n    context.barDimensions = {\n        isVertical: isVertical,\n        width: width,\n        length: length,\n        barWidth: barWidth,\n        barLength: barLength,\n        strokeWidth: strokeWidth,\n        barMargin: barMargin,\n        radius: radius,\n        pixelRatio: pixelRatio,\n        barOffset: null,\n        titleMargin: hasTitle ? titleMargin : 0,\n        unitsMargin: hasUnits ? unitsMargin : 0,\n        get ticksLength() {\n            return this.barLength - this.barOffset - this.strokeWidth;\n        },\n        X: x + dx,\n        Y: y + dy,\n        x0: x0 + dx,\n        y0: y0 + dy,\n        baseX: x,\n        baseY: y,\n        ticksPadding: options.ticksPadding / 100\n    };\n\n    return context.barDimensions;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws bar shape from the given options on a given canvas context\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {string} type\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n */\nfunction drawLinearBarShape(context, options, type, x, y, w, h) {\n    var _barDimensions = barDimensions(context, options, x, y, w, h),\n        isVertical = _barDimensions.isVertical,\n        width = _barDimensions.width,\n        barWidth = _barDimensions.barWidth,\n        barLength = _barDimensions.barLength,\n        strokeWidth = _barDimensions.strokeWidth,\n        barMargin = _barDimensions.barMargin,\n        radius = _barDimensions.radius,\n        x0 = _barDimensions.x0,\n        y0 = _barDimensions.y0,\n        X = _barDimensions.X,\n        Y = _barDimensions.Y;\n\n    var fullBarLength = barLength;\n\n    context.save();\n    context.beginPath();\n\n    if (options.barBeginCircle) {\n        var direction = drawings.radians(isVertical ? 270 : 0);\n        var alpha = Math.asin(barWidth / 2 / radius);\n        var cosAlpha = Math.cos(alpha);\n        var sinAlpha = Math.sin(alpha);\n\n        var x1 = x0 + (isVertical ? radius * sinAlpha : radius * cosAlpha - strokeWidth / 2);\n        var y1 = isVertical ? y0 - radius * cosAlpha : y0 + radius * sinAlpha;\n        //noinspection JSUnresolvedFunction\n        var cutRadius = isVertical ? abs(y1 - y0) : abs(x1 - x0);\n\n        //noinspection JSUnresolvedFunction\n        context.barDimensions.barOffset = round(cutRadius + radius);\n\n        // bottom point\n        //noinspection JSUnresolvedFunction\n        var x2 = isVertical ? round(x0 - radius * sinAlpha) : x1;\n        //noinspection JSUnresolvedFunction\n        var y2 = isVertical ? y1 : round(y0 - radius * sinAlpha);\n\n        if (type === 'progress') {\n            var value = drawings.normalizedValue(options)[options.clampProgressNeedle ? 'indented' : 'normal'];\n\n            barLength = context.barDimensions.barOffset + (barLength - context.barDimensions.barOffset) * (value - options.minValue) / (options.maxValue - options.minValue);\n        }\n\n        // bar ends at\n        //noinspection JSUnresolvedFunction\n        var x3 = round(x1 + barLength - context.barDimensions.barOffset + strokeWidth / 2); // h\n        //noinspection JSUnresolvedFunction\n        var y3 = round(y1 - barLength + context.barDimensions.barOffset - strokeWidth / 2); // v\n\n        context.arc(x0, y0, radius, direction + alpha, direction - alpha);\n\n        if (isVertical) {\n            context.moveTo(x1, y2);\n            context.lineTo(x1, y3);\n            context.lineTo(x2, y3);\n            context.lineTo(x2, y2);\n        } else {\n            context.moveTo(x1, y2);\n            context.lineTo(x3, y2);\n            context.lineTo(x3, y1);\n            context.lineTo(x1, y1);\n        }\n    } else {\n        // simply rectangle\n        //noinspection JSUnresolvedFunction\n        var rx = round(isVertical ? X + (width - barWidth) / 2 : X + barMargin);\n        //noinspection JSUnresolvedFunction\n        var ry = round(isVertical ? Y + barLength + barMargin : Y + (width - barWidth) / 2);\n\n        if (type === 'progress') {\n            var _value2 = drawings.normalizedValue(options)[options.clampProgressNeedle ? 'indented' : 'normal'];\n            barLength *= (_value2 - options.minValue) / (options.maxValue - options.minValue);\n        }\n\n        if (isVertical) context.rect(rx, ry, barWidth, -barLength);else context.rect(rx, ry, barLength, barWidth);\n    }\n\n    if (type !== 'progress' && options.barStrokeWidth) {\n        context.lineWidth = strokeWidth;\n        context.strokeStyle = options.colorBarStroke;\n        //context.lineJoin = 'round';\n        context.stroke();\n    }\n\n    if (type !== 'progress' && options.colorBar) {\n        context.fillStyle = options.colorBarEnd ? drawings.linearGradient(context, options.colorBar, options.colorBarEnd, barLength, isVertical, isVertical ? Y : X) : options.colorBar;\n        context.fill();\n    } else if (type === 'progress' && options.colorBarProgress) {\n        context.fillStyle = options.colorBarProgressEnd ? drawings.linearGradient(context, options.colorBarProgress, options.colorBarProgressEnd, fullBarLength, isVertical, isVertical ? Y : X) : options.colorBarProgress;\n        context.fill();\n    }\n\n    context.closePath();\n\n    // fix dimensions for further usage\n    if (options.barBeginCircle) context.barDimensions.radius += strokeWidth;\n\n    context.barDimensions.barWidth += strokeWidth;\n    context.barDimensions.barLength += strokeWidth;\n}\n\n/**\r\n * Draws gauge bar\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} x x-coordinate of the top-left corner of the gauge\r\n * @param {number} y y-coordinate of the top-left corner of the gauge\r\n * @param {number} w width of the gauge\r\n * @param {number} h height of the gauge\r\n */\nfunction drawLinearBar(context, options, x, y, w, h) {\n    drawLinearBarShape(context, options, '', x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Helper function to calculate bar ticks presence on the sides\r\n *\r\n * @param {string} notWhich\r\n * @param {LinearGaugeOptions} options\r\n * @return {boolean}\r\n */\nfunction hasTicksBar(notWhich, options) {\n    return options.needleSide !== notWhich || options.tickSide !== notWhich || options.numberSide !== notWhich;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge bar progress\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} x x-coordinate of the top-left corner of the gauge\r\n * @param {number} y y-coordinate of the top-left corner of the gauge\r\n * @param {number} w width of the gauge\r\n * @param {number} h height of the gauge\r\n */\nfunction drawLinearBarProgress(context, options, x, y, w, h) {\n    options.barProgress && drawLinearBarShape(context, options, 'progress', x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws gauge bar highlighted areas\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearBarHighlights(context, options) {\n    var _context$barDimension = context.barDimensions,\n        isVertical = _context$barDimension.isVertical,\n        width = _context$barDimension.width,\n        length = _context$barDimension.length,\n        barWidth = _context$barDimension.barWidth,\n        barOffset = _context$barDimension.barOffset,\n        barMargin = _context$barDimension.barMargin,\n        X = _context$barDimension.X,\n        Y = _context$barDimension.Y,\n        ticksLength = _context$barDimension.ticksLength,\n        ticksPadding = _context$barDimension.ticksPadding;\n\n    var hlWidth = width * (parseFloat(options.highlightsWidth) || 0) / 100;\n\n    if (!options.highlights || !hlWidth) return;\n\n    var hasLeft = options.tickSide !== 'right';\n    var hasRight = options.tickSide !== 'left';\n    var i = 0;\n    var s = options.highlights.length;\n    var tickOffset = (width - barWidth) / 2;\n    var interval = options.maxValue - options.minValue;\n    //noinspection JSUnresolvedFunction\n    var eX = round(isVertical ? X + tickOffset : X + barMargin + barOffset);\n    var eH = hlWidth;\n    var eY = isVertical ? Y + length - barMargin - barOffset : Y + tickOffset;\n    //noinspection JSUnresolvedFunction\n    var hLeft = round((options.ticksWidth / 100 + ticksPadding) * width) + (hlWidth - options.ticksWidth / 100 * width);\n    //noinspection JSUnresolvedFunction\n    var hRight = round(barWidth + ticksPadding * width);\n\n    context.save();\n\n    for (; i < s; i++) {\n        var entry = options.highlights[i];\n        //noinspection JSUnresolvedFunction\n        var eStart = ticksLength * abs(options.minValue - entry.from) / interval;\n        //noinspection JSUnresolvedFunction\n        var eW = ticksLength * abs((entry.to - entry.from) / interval);\n\n        context.beginPath();\n        context.fillStyle = entry.color;\n\n        if (isVertical) {\n            if (hasLeft) context.rect(eX - hLeft, eY - eStart, eH, -eW);\n\n            if (hasRight) context.rect(eX + hRight, eY - eStart, eH, -eW);\n        } else {\n            if (hasLeft) context.rect(eX + eStart, eY - hLeft, eW, eH);\n\n            if (hasRight) context.rect(eX + eStart, eY + hRight, eW, eH);\n        }\n\n        context.fill();\n        context.closePath();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws a tick line on a linear gauge\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n */\nfunction drawLinearTick(context, x1, y1, x2, y2) {\n    context.beginPath();\n\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws ticks\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {string} color\r\n * @param {number[]} ticks\r\n * @param {number} minVal\r\n * @param {number} maxVal\r\n * @param {boolean} hasLeft\r\n * @param {boolean} hasRight\r\n * @param {number} lineWidth\r\n * @param {number} lineLength\r\n */\nfunction drawLinearTicks(context, color, ticks, minVal, maxVal, hasLeft, hasRight, lineWidth, lineLength) {\n    var _context$barDimension2 = context.barDimensions,\n        isVertical = _context$barDimension2.isVertical,\n        length = _context$barDimension2.length,\n        barWidth = _context$barDimension2.barWidth,\n        barOffset = _context$barDimension2.barOffset,\n        barMargin = _context$barDimension2.barMargin,\n        pixelRatio = _context$barDimension2.pixelRatio,\n        width = _context$barDimension2.width,\n        X = _context$barDimension2.X,\n        Y = _context$barDimension2.Y,\n        ticksLength = _context$barDimension2.ticksLength,\n        ticksPadding = _context$barDimension2.ticksPadding;\n\n    var tickOffset = (width - barWidth) / 2;\n    var tickX = void 0,\n        tickY = void 0;\n    var i = 0;\n    var s = ticks.length;\n    var val = void 0;\n    var tickLen = lineLength * width;\n    var tickLeft = tickOffset - ticksPadding * width;\n    var tickRight = tickOffset + barWidth + tickLen + ticksPadding * width;\n    var colors = color instanceof Array ? color : new Array(ticks.length).fill(color);\n\n    context.lineWidth = lineWidth * pixelRatio;\n    context.save();\n\n    var ratio = ticksLength / (maxVal - minVal);\n    for (; i < s; i++) {\n        val = ticks[i];\n        context.strokeStyle = colors[i];\n\n        if (isVertical) {\n            tickY = Y + length - barMargin - barOffset + (minVal - val) * ratio;\n\n            if (hasLeft) {\n                tickX = X + tickLeft;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n\n            if (hasRight) {\n                tickX = X + tickRight;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n        } else {\n            tickX = X + barMargin + barOffset - (minVal - val) * ratio;\n\n            if (hasLeft) {\n                tickY = Y + tickLeft;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, tickX, round(tickY - tickLen));\n            }\n\n            if (hasRight) {\n                tickY = Y + tickRight;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, round(tickY), tickX, tickY - tickLen);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws major ticks\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearMajorTicks(context, options) {\n    var _drawings$prepareTick = drawings.prepareTicks(options),\n        _drawings$prepareTick2 = _slicedToArray(_drawings$prepareTick, 2),\n        hasLeft = _drawings$prepareTick2[0],\n        hasRight = _drawings$prepareTick2[1];\n\n    var lineWidth = 2;\n    var valuePerNonExactTick = (options.maxValue - options.minValue) / (options.majorTicks.length - 1);\n    var colors = options.colorMajorTicks instanceof Array ? options.colorMajorTicks : new Array(options.majorTicks.length).fill(options.colorStrokeTicks || options.colorMajorTicks);\n    var ticks = options.exactTicks ? options.majorTicks : options.majorTicks.map(function (tick, i) {\n        return options.minValue + valuePerNonExactTick * i;\n    });\n\n    drawLinearTicks(context, colors, ticks, options.minValue, options.maxValue, hasLeft, hasRight, lineWidth, options.ticksWidth / 100);\n\n    if (options.strokeTicks) {\n        var _context$barDimension3 = context.barDimensions,\n            isVertical = _context$barDimension3.isVertical,\n            length = _context$barDimension3.length,\n            width = _context$barDimension3.width,\n            barWidth = _context$barDimension3.barWidth,\n            barMargin = _context$barDimension3.barMargin,\n            barOffset = _context$barDimension3.barOffset,\n            X = _context$barDimension3.X,\n            Y = _context$barDimension3.Y,\n            ticksLength = _context$barDimension3.ticksLength,\n            pixelRatio = _context$barDimension3.pixelRatio,\n            ticksPadding = _context$barDimension3.ticksPadding;\n\n        var rightTicks = (width - barWidth) / 2 + barWidth + ticksPadding * width;\n        var leftTicks = (width - barWidth) / 2 - ticksPadding * width;\n        var sX = void 0,\n            sY = void 0,\n            eX = void 0,\n            eY = void 0;\n\n        context.strokeStyle = options.colorStrokeTicks || colors[0];\n\n        lineWidth *= pixelRatio;\n\n        if (isVertical) {\n            sY = Y + length - barMargin - barOffset + lineWidth / 2;\n            eY = sY - ticksLength - lineWidth;\n\n            if (hasLeft) {\n                //noinspection JSUnresolvedFunction\n                eX = sX = round(X + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                //noinspection JSUnresolvedFunction\n                eX = sX = round(X + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        } else {\n            sX = X + barMargin + barOffset - lineWidth / 2;\n            eX = sX + ticksLength + lineWidth;\n\n            if (hasLeft) {\n                //noinspection JSUnresolvedFunction\n                eY = sY = round(Y + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                //noinspection JSUnresolvedFunction\n                eY = sY = round(Y + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws ticks stroke\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {number} sX\r\n * @param {number} sY\r\n * @param {number} eX\r\n * @param {number} eY\r\n */\nfunction drawLinearTickStroke(context, sX, sY, eX, eY) {\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws minor ticks\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearMinorTicks(context, options) {\n    var _drawings$prepareTick3 = drawings.prepareTicks(options),\n        _drawings$prepareTick4 = _slicedToArray(_drawings$prepareTick3, 2),\n        hasLeft = _drawings$prepareTick4[0],\n        hasRight = _drawings$prepareTick4[1];\n\n    var ticks = [];\n    var i = options.minValue;\n    var minTicks = Math.abs(options.minorTicks) || 0;\n    var valuePerNonExactTick = minTicks ? (options.maxValue - options.minValue) / (minTicks * (options.majorTicks.length - 1)) : 0;\n\n    if (minTicks) {\n        if (options.exactTicks) {\n            var delta = BaseGauge.mod(options.majorTicks[0], minTicks) || 0;\n\n            for (; i < options.maxValue; i += minTicks) {\n                if (delta + i < options.maxValue) {\n                    ticks.push(delta + i);\n                }\n            }\n        } else {\n            for (; i < options.maxValue; i += valuePerNonExactTick) {\n                ticks.push(i);\n            }\n        }\n    }\n\n    drawLinearTicks(context, options.colorMinorTicks || options.colorStrokeTicks, ticks, options.minValue, options.maxValue, hasLeft, hasRight, 1, options.ticksWidthMinor / 100);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws major tick numbers\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearMajorTicksNumbers(context, options) {\n    var _context$barDimension4 = context.barDimensions,\n        isVertical = _context$barDimension4.isVertical,\n        length = _context$barDimension4.length,\n        width = _context$barDimension4.width,\n        barWidth = _context$barDimension4.barWidth,\n        barMargin = _context$barDimension4.barMargin,\n        barOffset = _context$barDimension4.barOffset,\n        X = _context$barDimension4.X,\n        Y = _context$barDimension4.Y,\n        ticksLength = _context$barDimension4.ticksLength,\n        ticksPadding = _context$barDimension4.ticksPadding;\n\n    var range = options.maxValue - options.minValue;\n    var valuePerNonExactTick = range / (options.majorTicks.length - 1);\n    var tickValues = options.exactTicks ? options.majorTicks : options.majorTicks.map(function (tick, i) {\n        return options.minValue + valuePerNonExactTick * i;\n    });\n    var ticks = tickValues.length;\n    var hasLeft = options.numberSide !== 'right';\n    var hasRight = options.numberSide !== 'left';\n    var textHeight = options.fontNumbersSize * width / 200;\n    var i = 0;\n    var ticksWidth = (options.ticksWidth / 100 + ticksPadding * 2) * width;\n    var numLeft = (width - barWidth) / 2 - ticksWidth;\n    var numRight = (width - barWidth) / 2 + barWidth + ticksWidth;\n    var textX = void 0,\n        textY = void 0,\n        textWidth = void 0,\n        numberOffset = void 0,\n        tick = void 0;\n    var colors = options.colorNumbers instanceof Array ? options.colorNumbers : new Array(ticks).fill(options.colorNumbers);\n    var textMargin = options.numbersMargin / 100 * width;\n\n    context.font = drawings.font(options, 'Numbers', width / 200);\n    context.lineWidth = 0;\n    context.textAlign = 'center';\n\n    for (; i < ticks; i++) {\n        context.fillStyle = colors[i];\n        tick = options.majorTicks[i];\n        numberOffset = options.exactTicks ? ticksLength * ((tickValues[i] - options.minValue) / range) : i * ticksLength / (ticks - 1);\n\n        if (isVertical) {\n            textY = Y + length - barMargin - barOffset - numberOffset + textHeight / 3;\n\n            if (hasLeft) {\n                context.textAlign = 'right';\n                context.fillText(tick, X + numLeft - textMargin, textY);\n            }\n\n            if (hasRight) {\n                context.textAlign = 'left';\n                context.fillText(tick, X + numRight + textMargin, textY);\n            }\n        } else {\n            textWidth = context.measureText(tick).width;\n            textX = X + barMargin + barOffset + numberOffset;\n\n            if (hasLeft) {\n                context.fillText(tick, textX, Y + numLeft - textMargin);\n            }\n\n            if (hasRight) {\n                context.fillText(tick, textX, Y + numRight + textHeight + textMargin);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws linear gauge title\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearTitle(context, options) {\n    if (!options.title) return;\n\n    var _context$barDimension5 = context.barDimensions,\n        isVertical = _context$barDimension5.isVertical,\n        width = _context$barDimension5.width,\n        length = _context$barDimension5.length,\n        baseX = _context$barDimension5.baseX,\n        baseY = _context$barDimension5.baseY,\n        titleMargin = _context$barDimension5.titleMargin;\n\n    var textHeight = options.fontTitleSize * width / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(baseY + titleMargin / 2 - (isVertical ? textHeight : textHeight / 2) - 0.025 * (isVertical ? length : width));\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorTitle;\n    context.font = drawings.font(options, 'Title', width / 200);\n    context.lineWidth = 0;\n    context.fillText(options.title, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws linear gauge units\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearUnits(context, options) {\n    if (!options.units) return;\n\n    var _context$barDimension6 = context.barDimensions,\n        isVertical = _context$barDimension6.isVertical,\n        width = _context$barDimension6.width,\n        length = _context$barDimension6.length,\n        baseX = _context$barDimension6.baseX,\n        baseY = _context$barDimension6.baseY,\n        unitsMargin = _context$barDimension6.unitsMargin;\n\n    var textHeight = options.fontUnitsSize * width / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(baseY + (isVertical ? length : width) + unitsMargin / 2 - textHeight / 2);\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorUnits;\n    context.font = drawings.font(options, 'Units', width / 200);\n    context.lineWidth = 0;\n    context.fillText(drawings.formatContext(options, options.units), textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws linear gauge needles\r\n *\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n */\nfunction drawLinearBarNeedle(context, options) {\n    if (!options.needle) return;\n\n    var _context$barDimension7 = context.barDimensions,\n        isVertical = _context$barDimension7.isVertical,\n        width = _context$barDimension7.width,\n        length = _context$barDimension7.length,\n        barWidth = _context$barDimension7.barWidth,\n        barOffset = _context$barDimension7.barOffset,\n        barMargin = _context$barDimension7.barMargin,\n        ticksLength = _context$barDimension7.ticksLength,\n        X = _context$barDimension7.X,\n        Y = _context$barDimension7.Y,\n        ticksPadding = _context$barDimension7.ticksPadding;\n\n    var hasLeft = options.needleSide !== 'right';\n    var hasRight = options.needleSide !== 'left';\n    var position = ticksLength * (drawings.normalizedValue(options).indented - options.minValue) / (options.maxValue - options.minValue);\n    var tickWidth = (options.ticksWidth / 100 + ticksPadding) * width;\n    var baseLength = barWidth / 2 + tickWidth;\n    var needleLength = baseLength * (options.needleEnd / 100);\n    var sX = void 0,\n        eX = void 0,\n        sY = void 0,\n        eY = void 0;\n    var draw = options.needleType.toLowerCase() === 'arrow' ? drawLinearArrowNeedle : drawLinearLineNeedle;\n    var barStart = (width - barWidth) / 2;\n    var needleStart = baseLength * (options.needleStart / 100);\n    var nLeft = barStart - tickWidth - needleStart;\n    var nRight = barStart + barWidth + tickWidth + needleStart;\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    if (isVertical) {\n        //noinspection JSUnresolvedFunction\n        sY = round(Y + length - barMargin - barOffset - position);\n\n        if (hasLeft) {\n            //noinspection JSUnresolvedFunction\n            sX = round(X + nLeft);\n            eX = sX + needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength);\n        }\n\n        if (hasRight) {\n            //noinspection JSUnresolvedFunction\n            sX = round(X + nRight);\n            eX = sX - needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength, true);\n        }\n    } else {\n        //noinspection JSUnresolvedFunction\n        sX = round(X + barMargin + barOffset + position);\n\n        if (hasLeft) {\n            //noinspection JSUnresolvedFunction\n            sY = round(Y + nLeft);\n            eY = sY + needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength);\n        }\n\n        if (hasRight) {\n            //noinspection JSUnresolvedFunction\n            sY = round(Y + nRight);\n            eY = sY - needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength, true);\n        }\n    }\n\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Returns needle color style\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} length\r\n * @param {boolean} [isRight]\r\n * @return {CanvasGradient|string}\r\n */\nfunction needleStyle(context, options, length, isRight) {\n    return options.colorNeedleEnd ? drawings.linearGradient(context, isRight ? options.colorNeedleEnd : options.colorNeedle, isRight ? options.colorNeedle : options.colorNeedleEnd, length, !context.barDimensions.isVertical) : options.colorNeedle;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws line needle shape\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} sX\r\n * @param {number} sY\r\n * @param {number} eX\r\n * @param {number} eY\r\n * @param {number} length\r\n * @param {boolean} [isRight]\r\n */\nfunction drawLinearLineNeedle(context, options, sX, sY, eX, eY, length, isRight) {\n    context.lineWidth = options.needleWidth;\n    context.strokeStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws arrow needle shape\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} sX\r\n * @param {number} sY\r\n * @param {number} eX\r\n * @param {number} eY\r\n * @param {number} length\r\n * @param {boolean} [isRight]\r\n */\nfunction drawLinearArrowNeedle(context, options, sX, sY, eX, eY, length, isRight) {\n    //noinspection JSUnresolvedFunction\n    var peakLength = round(length * 0.4);\n    var bodyLength = length - peakLength;\n    var isVertical = sX === eX;\n    var halfWidth = options.needleWidth / 2;\n\n    context.fillStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n\n    if (isVertical) {\n        if (sY > eY) bodyLength *= -1;\n\n        context.moveTo(sX - halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY + bodyLength);\n        context.lineTo(sX, eY);\n        context.lineTo(sX - halfWidth, sY + bodyLength);\n        context.lineTo(sX - halfWidth, sY);\n    } else {\n        if (sX > eX) bodyLength *= -1;\n\n        context.moveTo(sX, sY - halfWidth);\n        context.lineTo(sX, sY + halfWidth);\n        context.lineTo(sX + bodyLength, sY + halfWidth);\n        context.lineTo(eX, sY);\n        context.lineTo(sX + bodyLength, sY - halfWidth);\n        context.lineTo(sX, sY - halfWidth);\n    }\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\r\n * Draws value box for linear gauge\r\n *\r\n * @access private\r\n * @param {Canvas2DContext} context\r\n * @param {LinearGaugeOptions} options\r\n * @param {number} value\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n */\nfunction drawLinearValueBox(context, options, value, x, y, w, h) {\n    // currently value box is available only for vertical linear gauge,\n    // as far as by design it is hard to find a proper place for\n    // horizontal ones\n    var boxWidth = (parseFloat(options.fontValueSize) || 0) * w / 200;\n    var dy = (0.11 * h - boxWidth) / 2;\n\n    context.barDimensions.isVertical && drawings.drawValueBox(context, options, value, x + w / 2, y + h - boxWidth - dy, w);\n}\n\n/**\r\n * Minimalistic HTML5 Canvas Linear Gauge\r\n */\n\nvar LinearGauge = function (_BaseGauge2) {\n    _inherits(LinearGauge, _BaseGauge2);\n\n    /**\r\n     * Fired each time before gauge plate is drawn\r\n     *\r\n     * @event LinearGauge#beforePlate\r\n     */\n\n    /**\r\n     * Fired each time before gauge highlight areas are drawn\r\n     *\r\n     * @event LinearGauge#beforeHighlights\r\n     */\n\n    /**\r\n     * Fired each time before gauge minor ticks are drawn\r\n     *\r\n     * @event LinearGauge#beforeMinorTicks\r\n     */\n\n    /**\r\n     * Fired each time before gauge major ticks are drawn\r\n     *\r\n     * @event LinearGauge#beforeMajorTicks\r\n     */\n\n    /**\r\n     * Fired each time before gauge tick numbers are drawn\r\n     *\r\n     * @event LinearGauge#beforeNumbers\r\n     */\n\n    /**\r\n     * Fired each time before gauge title is drawn\r\n     *\r\n     * @event LinearGauge#beforeTitle\r\n     */\n\n    /**\r\n     * Fired each time before gauge units text is drawn\r\n     *\r\n     * @event LinearGauge#beforeUnits\r\n     */\n\n    /**\r\n     * Fired each time before gauge bar area is drawn\r\n     *\r\n     * @event LinearGauge#beforeBar\r\n     */\n\n    /**\r\n     * Fired each time before gauge progress bar is drawn\r\n     *\r\n     * @event LinearGauge#beforeProgressBar\r\n     */\n\n    /**\r\n     * Fired each time before gauge value box is drawn\r\n     *\r\n     * @event LinearGauge#beforeValueBox\r\n     */\n\n    /**\r\n     * Fired each time before gauge needle is drawn\r\n     *\r\n     * @event LinearGauge#beforeNeedle\r\n     */\n\n    /**\r\n     * @constructor\r\n     * @param {LinearGaugeOptions} options\r\n     */\n    function LinearGauge(options) {\n        _classCallCheck(this, LinearGauge);\n\n        options = Object.assign({}, defaultLinearGaugeOptions, options || {});\n        return _possibleConstructorReturn(this, (LinearGauge.__proto__ || Object.getPrototypeOf(LinearGauge)).call(this, LinearGauge.configure(options)));\n    }\n\n    /**\r\n     * Checks and updates gauge options properly\r\n     *\r\n     * @param {*} options\r\n     * @return {*}\r\n     * @access protected\r\n     */\n\n\n    _createClass(LinearGauge, [{\n        key: 'draw',\n\n\n        /* istanbul ignore next */\n        /**\r\n         * Triggering linear gauge render on a canvas.\r\n         *\r\n         * @returns {LinearGauge}\r\n         */\n        value: function draw() {\n            try {\n                var canvas = this.canvas;\n                var _ref2 = [-canvas.drawX, -canvas.drawY, canvas.drawWidth, canvas.drawHeight],\n                    x = _ref2[0],\n                    y = _ref2[1],\n                    w = _ref2[2],\n                    h = _ref2[3];\n\n                var options = this.options;\n\n                if (!canvas.elementClone.initialized) {\n                    var context = canvas.contextClone;\n\n                    // clear the cache\n                    context.clearRect(x, y, w, h);\n                    context.save();\n\n                    this.emit('beforePlate');\n                    this.drawBox = drawLinearPlate(context, options, x, y, w, h);\n\n                    this.emit('beforeBar');\n                    drawLinearBar.apply(undefined, [context, options].concat(_toConsumableArray(this.drawBox)));\n\n                    canvas.context.barDimensions = context.barDimensions;\n\n                    this.emit('beforeHighlights');\n                    drawLinearBarHighlights(context, options);\n                    this.emit('beforeMinorTicks');\n                    drawLinearMinorTicks(context, options);\n                    this.emit('beforeMajorTicks');\n                    drawLinearMajorTicks(context, options);\n                    this.emit('beforeNumbers');\n                    drawLinearMajorTicksNumbers(context, options);\n                    this.emit('beforeTitle');\n                    drawLinearTitle(context, options);\n                    this.emit('beforeUnits');\n                    drawLinearUnits(context, options);\n\n                    canvas.elementClone.initialized = true;\n                }\n\n                this.canvas.commit();\n\n                // clear the canvas\n                canvas.context.clearRect(x, y, w, h);\n                canvas.context.save();\n\n                canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                canvas.context.save();\n\n                this.emit('beforeProgressBar');\n                drawLinearBarProgress.apply(undefined, [canvas.context, options].concat(_toConsumableArray(this.drawBox)));\n                this.emit('beforeNeedle');\n                drawLinearBarNeedle(canvas.context, options);\n                this.emit('beforeValueBox');\n                drawLinearValueBox.apply(undefined, [canvas.context, options, options.animatedValue ? this.options.value : this.value].concat(_toConsumableArray(this.drawBox)));\n\n                _get(LinearGauge.prototype.__proto__ || Object.getPrototypeOf(LinearGauge.prototype), 'draw', this).call(this);\n            } catch (err) {\n                drawings.verifyError(err);\n            }\n\n            return this;\n        }\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            /* istanbul ignore else */\n            if (options.barStrokeWidth >= options.barWidth) {\n                //noinspection JSUnresolvedFunction\n                options.barStrokeWidth = round(options.barWidth / 2);\n            }\n\n            //noinspection JSUndefinedPropertyAssignment\n            options.hasLeft = hasTicksBar('right', options);\n            //noinspection JSUndefinedPropertyAssignment\n            options.hasRight = hasTicksBar('left', options);\n\n            if (options.value > options.maxValue) {\n                options.value = options.maxValue;\n            }\n\n            if (options.value < options.minValue) {\n                options.value = options.minValue;\n            }\n\n            return BaseGauge.configure(options);\n        }\n    }]);\n\n    return LinearGauge;\n}(BaseGauge);\n\n/**\r\n * @ignore\r\n * @typedef {object} ns\r\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['LinearGauge'] = LinearGauge;\n}\n\nBaseGauge.initialize('LinearGauge', defaultLinearGaugeOptions);;typeof module !== \"undefined\" && Object.assign(ns, {Collection: Collection,GenericOptions: GenericOptions,Animation: Animation,BaseGauge: BaseGauge,drawings: drawings,SmartCanvas: SmartCanvas,DomObserver: DomObserver,vendorize: vendorize});}(typeof module !== \"undefined\" ? module.exports : window));"]}